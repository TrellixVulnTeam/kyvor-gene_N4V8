{"ast":null,"code":"import _objectSpread from\"/home/aravind/Desktop/newpro/kyvor-gene/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/home/aravind/Desktop/newpro/kyvor-gene/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"component\",\"auth\",\"redirect\"];// import React from \"react\";\n// import { Route, Redirect } from \"react-router-dom\";\n// import PropTypes from \"prop-types\";\nimport{connect}from\"react-redux\";// const PrivateRoute = ({\n//   component: Component,\n//   auth: { isAuthenticated, loading },\n//   ...rest\n// }) => (\n//   <Route\n//     {...rest}\n//     render={(props) =>\n//       !isAuthenticated && !loading ? (\n//         <Redirect to=\"/user-pages/login-1\" />\n//       ) : (\n//         <Component {...props} />\n//       )\n//     }\n//   />\n// );\n// PrivateRoute.propTypes = {\n//   auth: PropTypes.object.isRequired,\n// };\n// const mapStateToProps = (state) => ({\n//   auth: state.auth,\n// });\n// export default connect(mapStateToProps)(PrivateRoute);\nimport React from'react';import{Route,Redirect}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";var PrivateRoute=function PrivateRoute(_ref){var Component=_ref.component,isAuthenticated=_ref.auth.isAuthenticated,pathname=_ref.redirect,rest=_objectWithoutProperties(_ref,_excluded);return/*#__PURE__*/_jsx(Route,_objectSpread(_objectSpread({},rest),{},{render:function render(props){return isAuthenticated===true?/*#__PURE__*/_jsx(Component,_objectSpread(_objectSpread({},rest),props)):/*#__PURE__*/_jsx(Redirect,{to:{pathname:pathname,state:{from:props.location}}});}}));};PrivateRoute.defaultProps={redirect:'/user-pages/login-1'};var mapStateToProps=function mapStateToProps(state){return{auth:state.auth};};export default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["/home/aravind/Desktop/newpro/kyvor-gene/front/src/PrivateRoutes.js"],"names":["connect","React","Route","Redirect","PrivateRoute","Component","component","isAuthenticated","auth","pathname","redirect","rest","props","state","from","location","defaultProps","mapStateToProps"],"mappings":"yYAAA;AACA;AACA;AACA,OAASA,OAAT,KAAwB,aAAxB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAKA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,QAAhB,KAAgC,kBAAhC,C,2CAGA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAKf,IAJOC,CAAAA,SAIP,MAJJC,SAII,CAHIC,eAGJ,MAHJC,IAGI,CAHID,eAGJ,CAFME,QAEN,MAFJC,QAEI,CADDC,IACC,0CACJ,mBACE,KAAC,KAAD,gCACMA,IADN,MAEE,MAAM,CAAE,gBAAAC,KAAK,QACXL,CAAAA,eAAe,GAAK,IAApB,cACE,KAAC,SAAD,gCAAeI,IAAf,EAAyBC,KAAzB,EADF,cAGE,KAAC,QAAD,EACE,EAAE,CAAE,CACFH,QAAQ,CAARA,QADE,CAEFI,KAAK,CAAE,CAAEC,IAAI,CAAEF,KAAK,CAACG,QAAd,CAFL,CADN,EAJS,EAFf,GADF,CAiBD,CAvBD,CAyBAX,YAAY,CAACY,YAAb,CAA4B,CAAEN,QAAQ,CAAE,qBAAZ,CAA5B,CAQA,GAAMO,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACJ,KAAD,QAAY,CAClCL,IAAI,CAAEK,KAAK,CAACL,IADsB,CAAZ,EAAxB,CAIA,cAAeR,CAAAA,OAAO,CAACiB,eAAD,CAAP,CAAyBb,YAAzB,CAAf","sourcesContent":["// import React from \"react\";\n// import { Route, Redirect } from \"react-router-dom\";\n// import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\n// const PrivateRoute = ({\n//   component: Component,\n//   auth: { isAuthenticated, loading },\n//   ...rest\n// }) => (\n//   <Route\n//     {...rest}\n//     render={(props) =>\n//       !isAuthenticated && !loading ? (\n//         <Redirect to=\"/user-pages/login-1\" />\n//       ) : (\n//         <Component {...props} />\n//       )\n//     }\n//   />\n// );\n\n// PrivateRoute.propTypes = {\n//   auth: PropTypes.object.isRequired,\n// };\n\n// const mapStateToProps = (state) => ({\n//   auth: state.auth,\n// });\n\n// export default connect(mapStateToProps)(PrivateRoute);\n\n\n\n\nimport React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: { isAuthenticated },\n  redirect: pathname,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        isAuthenticated === true ? (\n          <Component {...rest} {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname,\n              state: { from: props.location },\n            }}\n          />\n        )\n      }\n    />\n  )\n}\n\nPrivateRoute.defaultProps = { redirect: '/user-pages/login-1' }\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n  component: PropTypes.func.isRequired,\n  redirect: PropTypes.string,\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}