{"ast":null,"code":"import axios from\"axios\";import{tokenHeader}from\"../headersauth\";import{POST_BASESPACE,POST_BIOSAMPLE,EDITED_BIOSAMPLE,EDITING_BIOSAMPLE,FETCHED_BIOSAMPLE,FETCHING_BIOSAMPLE}from\"./types\";export var addBasespace=function addBasespace(project){return function(dispatch,getState){axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/api/project/\"),project,tokenHeader(getState)).then(function(res){dispatch({type:POST_BASESPACE,payload:res.data});}).catch(function(err){return console.log(err);});};};export var addBiosample=function addBiosample(project){return function(dispatch,getState){axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/api/biosample/\"),project,tokenHeader(getState)).then(function(res){dispatch({type:POST_BIOSAMPLE,payload:res.data});}).catch(function(err){return console.log(err);});};};export function viewBiosample(id){var url=\"\".concat(process.env.REACT_APP_API_URL,\"/api/biosample/\").concat(id,\"/\");var request=axios.get(url,tokenHeader());return function(dispatch){dispatch({type:FETCHING_BIOSAMPLE});request.then(function(response){dispatch({type:FETCHED_BIOSAMPLE,payload:response.data});});};}export function editSample(fromValue,id,callback){console.log(fromValue);var url=\"\".concat(process.env.REACT_APP_API_URL,\"/api/biosample/\").concat(id,\"/\");var request=axios.put(url,fromValue,tokenHeader());return function(dispatch){dispatch({type:EDITING_BIOSAMPLE});request.then(function(response){dispatch({type:EDITED_BIOSAMPLE});callback();});};}","map":{"version":3,"sources":["/home/aravind/Desktop/newpro/kyvor-gene/front/src/actions/basespace.js"],"names":["axios","tokenHeader","POST_BASESPACE","POST_BIOSAMPLE","EDITED_BIOSAMPLE","EDITING_BIOSAMPLE","FETCHED_BIOSAMPLE","FETCHING_BIOSAMPLE","addBasespace","project","dispatch","getState","post","process","env","REACT_APP_API_URL","then","res","type","payload","data","catch","err","console","log","addBiosample","viewBiosample","id","url","request","get","response","editSample","fromValue","callback","put"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,WAAT,KAA4B,gBAA5B,CAEA,OAASC,cAAT,CAAyBC,cAAzB,CAAwCC,gBAAxC,CAAyDC,iBAAzD,CAA2EC,iBAA3E,CAA6FC,kBAA7F,KAAsH,SAAtH,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,OAAD,QAAa,UAACC,QAAD,CAAWC,QAAX,CAAwB,CAC/DX,KAAK,CACFY,IADH,WAEOC,OAAO,CAACC,GAAR,CAAYC,iBAFnB,kBAGIN,OAHJ,CAIIR,WAAW,CAACU,QAAD,CAJf,EAMGK,IANH,CAMQ,SAACC,GAAD,CAAS,CACbP,QAAQ,CAAC,CACPQ,IAAI,CAAEhB,cADC,CAEPiB,OAAO,CAAEF,GAAG,CAACG,IAFN,CAAD,CAAR,CAID,CAXH,EAYGC,KAZH,CAYS,SAACC,GAAD,QAASC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT,EAZT,EAaD,CAd2B,EAArB,CAgBP,MAAO,IAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAChB,OAAD,QAAa,UAACC,QAAD,CAAWC,QAAX,CAAwB,CAC/DX,KAAK,CACFY,IADH,WAEOC,OAAO,CAACC,GAAR,CAAYC,iBAFnB,oBAGIN,OAHJ,CAIIR,WAAW,CAACU,QAAD,CAJf,EAMGK,IANH,CAMQ,SAACC,GAAD,CAAS,CACbP,QAAQ,CAAC,CACPQ,IAAI,CAAEf,cADC,CAEPgB,OAAO,CAAEF,GAAG,CAACG,IAFN,CAAD,CAAR,CAID,CAXH,EAYGC,KAZH,CAYS,SAACC,GAAD,QAASC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT,EAZT,EAaD,CAd2B,EAArB,CAiBP,MAAO,SAASI,CAAAA,aAAT,CAAuBC,EAAvB,CAA2B,CAEhC,GAAMC,CAAAA,GAAG,WAAMf,OAAO,CAACC,GAAR,CAAYC,iBAAlB,2BAAqDY,EAArD,KAAT,CACA,GAAME,CAAAA,OAAO,CAAG7B,KAAK,CAAC8B,GAAN,CAAUF,GAAV,CAAe3B,WAAW,EAA1B,CAAhB,CACA,MAAO,UAACS,QAAD,CAAc,CACnBA,QAAQ,CAAC,CAAEQ,IAAI,CAAEX,kBAAR,CAAD,CAAR,CACAsB,OAAO,CAACb,IAAR,CAAa,SAACe,QAAD,CAAc,CACzBrB,QAAQ,CAAC,CAAEQ,IAAI,CAAEZ,iBAAR,CAA2Ba,OAAO,CAAEY,QAAQ,CAACX,IAA7C,CAAD,CAAR,CACD,CAFD,EAGD,CALD,CAMD,CAED,MAAO,SAASY,CAAAA,UAAT,CAAoBC,SAApB,CAA+BN,EAA/B,CAAmCO,QAAnC,CAA6C,CAClDX,OAAO,CAACC,GAAR,CAAYS,SAAZ,EAEA,GAAML,CAAAA,GAAG,WAAMf,OAAO,CAACC,GAAR,CAAYC,iBAAlB,2BAAqDY,EAArD,KAAT,CACA,GAAME,CAAAA,OAAO,CAAG7B,KAAK,CAACmC,GAAN,CAAUP,GAAV,CAAeK,SAAf,CAA0BhC,WAAW,EAArC,CAAhB,CACA,MAAO,UAACS,QAAD,CAAc,CACnBA,QAAQ,CAAC,CAAEQ,IAAI,CAAEb,iBAAR,CAAD,CAAR,CACAwB,OAAO,CAACb,IAAR,CAAa,SAACe,QAAD,CAAc,CACzBrB,QAAQ,CAAC,CAAEQ,IAAI,CAAEd,gBAAR,CAAD,CAAR,CACA8B,QAAQ,GACT,CAHD,EAID,CAND,CAOD","sourcesContent":["import axios from \"axios\";\n\nimport { tokenHeader } from \"../headersauth\";\n\nimport { POST_BASESPACE, POST_BIOSAMPLE,EDITED_BIOSAMPLE,EDITING_BIOSAMPLE,FETCHED_BIOSAMPLE,FETCHING_BIOSAMPLE} from \"./types\";\n\nexport const addBasespace = (project) => (dispatch, getState) => {\n  axios\n    .post(\n      `${process.env.REACT_APP_API_URL}/api/project/`,\n      project,\n      tokenHeader(getState)\n    )\n    .then((res) => {\n      dispatch({\n        type: POST_BASESPACE,\n        payload: res.data,\n      });\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const addBiosample = (project) => (dispatch, getState) => {\n  axios\n    .post(\n      `${process.env.REACT_APP_API_URL}/api/biosample/`,\n      project,\n      tokenHeader(getState)\n    )\n    .then((res) => {\n      dispatch({\n        type: POST_BIOSAMPLE,\n        payload: res.data,\n      });\n    })\n    .catch((err) => console.log(err));\n};\n\n\nexport function viewBiosample(id) {\n  \n  const url = `${process.env.REACT_APP_API_URL}/api/biosample/${id}/`;\n  const request = axios.get(url, tokenHeader());\n  return (dispatch) => {\n    dispatch({ type: FETCHING_BIOSAMPLE });\n    request.then((response) => {\n      dispatch({ type: FETCHED_BIOSAMPLE, payload: response.data });\n    });\n  };\n}\n\nexport function editSample(fromValue, id, callback) {\n  console.log(fromValue);\n \n  const url = `${process.env.REACT_APP_API_URL}/api/biosample/${id}/`;\n  const request = axios.put(url, fromValue, tokenHeader());\n  return (dispatch) => {\n    dispatch({ type: EDITING_BIOSAMPLE });\n    request.then((response) => {\n      dispatch({ type: EDITED_BIOSAMPLE });\n      callback();\n    });\n  };\n}\n\n"]},"metadata":{},"sourceType":"module"}