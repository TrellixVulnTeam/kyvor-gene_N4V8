{"ast":null,"code":"import _objectSpread from\"/home/aravind/Desktop/newpro/kyvor-gene/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{POST_BASESPACE,FETCHED_BIOSAMPLE,FETCHING_BIOSAMPLE}from\"../actions/types\";var initialState={isFetching:false,isFetched:false,projects:null};export default function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case POST_BASESPACE:return _objectSpread(_objectSpread({},state),{},{projects:action.payload});case FETCHING_BIOSAMPLE:return _objectSpread(_objectSpread({},state),{},{isFetching:true});case FETCHED_BIOSAMPLE:return _objectSpread(_objectSpread({},state),{},{isFetching:false,isFetched:true.valueOf,projects:action.payload});default:return state;}}","map":{"version":3,"sources":["/home/aravind/Desktop/newpro/kyvor-gene/front/src/reducers/basespace.js"],"names":["POST_BASESPACE","FETCHED_BIOSAMPLE","FETCHING_BIOSAMPLE","initialState","isFetching","isFetched","projects","state","action","type","payload","valueOf"],"mappings":"mKAAA,OACEA,cADF,CAEEC,iBAFF,CAGEC,kBAHF,KAIO,kBAJP,CAMA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,UAAU,CAAE,KADO,CAEnBC,SAAS,CAAE,KAFQ,CAGnBC,QAAQ,CAAE,IAHS,CAArB,CAMA,cAAe,WAAwC,IAA9BC,CAAAA,KAA8B,2DAAtBJ,YAAsB,IAARK,CAAAA,MAAQ,2CACrD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKT,CAAAA,cAAL,CACE,sCAAYO,KAAZ,MAAmBD,QAAQ,CAAEE,MAAM,CAACE,OAApC,GACF,IAAKR,CAAAA,kBAAL,CACE,sCAAYK,KAAZ,MAAmBH,UAAU,CAAE,IAA/B,GACF,IAAKH,CAAAA,iBAAL,CACE,sCACKM,KADL,MAEEH,UAAU,CAAE,KAFd,CAGEC,SAAS,CAAE,KAAKM,OAHlB,CAIEL,QAAQ,CAAEE,MAAM,CAACE,OAJnB,GAMF,QACE,MAAOH,CAAAA,KAAP,CAbJ,CAeD","sourcesContent":["import {\n  POST_BASESPACE,\n  FETCHED_BIOSAMPLE,\n  FETCHING_BIOSAMPLE,\n} from \"../actions/types\";\n\nconst initialState = {\n  isFetching: false,\n  isFetched: false,\n  projects: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case POST_BASESPACE:\n      return { ...state, projects: action.payload };\n    case FETCHING_BIOSAMPLE:\n      return { ...state, isFetching: true };\n    case FETCHED_BIOSAMPLE:\n      return {\n        ...state,\n        isFetching: false,\n        isFetched: true.valueOf,\n        projects: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}