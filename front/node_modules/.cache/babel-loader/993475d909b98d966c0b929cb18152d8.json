{"ast":null,"code":"import _toConsumableArray from\"/home/aravind/Desktop/newpro/kyvor-gene/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/aravind/Desktop/newpro/kyvor-gene/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{POST_BIOSAMPLE,POST_BIOSAMPLE_ERROR,EDIT_BIOAMPLE}from\"../actions/types\";var initialState={projects:[],error:null};export default function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case POST_BIOSAMPLE:return _objectSpread(_objectSpread({},state),{},{projects:[].concat(_toConsumableArray(state.projects),[action.payload])});case POST_BIOSAMPLE_ERROR:return{projects:[],error:action.payload};case EDIT_BIOAMPLE:var project=action.payload.data;return _objectSpread(_objectSpread({},state),{},{projects:state.projects.map(function(item){return item._id===project._id?project:item;}),errors:{},loading:false});default:return state;}}","map":{"version":3,"sources":["/home/aravind/Desktop/newpro/kyvor-gene/front/src/reducers/biosample.js"],"names":["POST_BIOSAMPLE","POST_BIOSAMPLE_ERROR","EDIT_BIOAMPLE","initialState","projects","error","state","action","type","payload","project","data","map","item","_id","errors","loading"],"mappings":"+UAAA,OAEGA,cAFH,CAEkBC,oBAFlB,CAEuCC,aAFvC,KAIS,kBAJT,CAME,GAAMC,CAAAA,YAAY,CAAG,CACnBC,QAAQ,CAAE,EADS,CAEnBC,KAAK,CAAC,IAFa,CAArB,CAKA,cAAe,WAAwC,IAA9BC,CAAAA,KAA8B,2DAAtBH,YAAsB,IAARI,CAAAA,MAAQ,2CACrD,OAAQA,MAAM,CAACC,IAAf,EAEE,IAAKR,CAAAA,cAAL,CACE,sCACKM,KADL,MAEEF,QAAQ,8BAAME,KAAK,CAACF,QAAZ,GAAsBG,MAAM,CAACE,OAA7B,EAFV,GAIA,IAAKR,CAAAA,oBAAL,CACI,MAAM,CACFG,QAAQ,CAAC,EADP,CAEFC,KAAK,CAACE,MAAM,CAACE,OAFX,CAAN,CAKJ,IAAKP,CAAAA,aAAL,CACE,GAAMQ,CAAAA,OAAO,CAAGH,MAAM,CAACE,OAAP,CAAeE,IAA/B,CACA,sCACKL,KADL,MAEEF,QAAQ,CAAEE,KAAK,CAACF,QAAN,CAAeQ,GAAf,CAAmB,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,GAAL,GAAaJ,OAAO,CAACI,GAArB,CAA2BJ,OAA3B,CAAqCG,IAAzC,EAAvB,CAFZ,CAGEE,MAAM,CAAE,EAHV,CAIEC,OAAO,CAAE,KAJX,GAOJ,QACE,MAAOV,CAAAA,KAAP,CAvBJ,CAyBD","sourcesContent":["import {\n\n   POST_BIOSAMPLE,POST_BIOSAMPLE_ERROR,EDIT_BIOAMPLE\n  \n  } from \"../actions/types\";\n  \n  const initialState = {\n    projects: [],\n    error:null\n  };\n  \n  export default function (state = initialState, action) {\n    switch (action.type) {\n      \n      case POST_BIOSAMPLE:\n        return {\n          ...state,\n          projects: [...state.projects, action.payload],\n        };\n        case POST_BIOSAMPLE_ERROR:\n            return{\n                projects:[],\n                error:action.payload\n            }\n\n        case EDIT_BIOAMPLE:\n          const project = action.payload.data;\n          return {\n            ...state,\n            projects: state.projects.map(item => item._id === project._id ? project : item),\n            errors: {},\n            loading: false\n          }\n     \n      default:\n        return state;\n    }\n  }"]},"metadata":{},"sourceType":"module"}