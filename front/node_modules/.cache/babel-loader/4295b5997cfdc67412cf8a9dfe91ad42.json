{"ast":null,"code":"import _regeneratorRuntime from\"/home/aravind/Desktop/newpro/kyvor-gene/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/aravind/Desktop/newpro/kyvor-gene/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";import{tokenHeader}from\"../headersauth\";import Swal from\"sweetalert2\";import{POST_BASESPACE,POST_BIOSAMPLE,ADD_ANALYSIS}from\"./types\";import{toast}from\"react-toastify\";import\"react-toastify/dist/ReactToastify.css\";toast.configure();// projects\nexport var addBasespace=function addBasespace(project){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/api/projects/\"),project);case 3:res=_context.sent;dispatch(Swal('Your Project Saved','success'));dispatch({type:POST_BASESPACE,payload:res.data});_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);dispatch(Swal('Error Message ','error'));case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function(_x){return _ref.apply(this,arguments);};}();};//Project ends\nexport var addBiosample=function addBiosample(project){return function(dispatch){axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/api/biosample/\"),project).then(function(res){dispatch({type:POST_BIOSAMPLE,payload:res.data});}).catch(function(err){console.log(\"Error\",err);if(err){toast.error(\"Biosamples was not added plz check the details\",{position:\"top-right\",autoClose:2000});}});};};export var addAnalysis=function addAnalysis(project){return function(dispatch){axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/api/analysis/\"),project).then(function(res){dispatch({type:ADD_ANALYSIS,payload:res.data});}).catch(function(err){console.log(\"Error\",err);if(err){toast.error(\"Analysis was not added plz check the details\",{position:\"top-right\",autoClose:2000});}});};};","map":{"version":3,"sources":["/home/aravind/Desktop/newpro/kyvor-gene/front/src/actions/basespace.js"],"names":["axios","tokenHeader","Swal","POST_BASESPACE","POST_BIOSAMPLE","ADD_ANALYSIS","toast","configure","addBasespace","project","dispatch","post","process","env","REACT_APP_API_URL","res","type","payload","data","addBiosample","then","catch","err","console","log","error","position","autoClose","addAnalysis"],"mappings":"qUAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,WAAT,KAA4B,gBAA5B,CACA,MAAOC,CAAAA,IAAP,KAAiB,aAAjB,CACA,OAASC,cAAT,CAAyBC,cAAzB,CAAyCC,YAAzC,KAA6D,SAA7D,CACA,OAASC,KAAT,KAAsB,gBAAtB,CAEA,MAAO,uCAAP,CAEAA,KAAK,CAACC,SAAN,GAEA;AAEA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,OAAD,iGAAa,iBAAOC,QAAP,gKAGnBV,CAAAA,KAAK,CAACW,IAAN,WACbC,OAAO,CAACC,GAAR,CAAYC,iBADC,mBACiCL,OADjC,CAHmB,QAG/BM,GAH+B,eAOrCL,QAAQ,CACNR,IAAI,CACF,oBADE,CACmB,SADnB,CADE,CAAR,CAKAQ,QAAQ,CAAC,CACPM,IAAI,CAAEb,cADC,CAEPc,OAAO,CAAEF,GAAG,CAACG,IAFN,CAAD,CAAR,CAZqC,+EAiBrCR,QAAQ,CACNR,IAAI,CAAC,gBAAD,CAAoB,OAApB,CADE,CAAR,CAjBqC,oEAAb,gEAArB,CAsBP;AAEA,MAAO,IAAMiB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACV,OAAD,QAAa,UAACC,QAAD,CAAc,CAErDV,KAAK,CACFW,IADH,WAEOC,OAAO,CAACC,GAAR,CAAYC,iBAFnB,oBAGIL,OAHJ,EAMGW,IANH,CAMQ,SAACL,GAAD,CAAS,CAGbL,QAAQ,CAAC,CAEPM,IAAI,CAAEZ,cAFC,CAGPa,OAAO,CAAEF,GAAG,CAACG,IAHN,CAAD,CAAR,CAKD,CAdH,EAeGG,KAfH,CAeS,SAACC,GAAD,CAAS,CACdC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAqBF,GAArB,EACA,GAAIA,GAAJ,CAAS,CACPhB,KAAK,CAACmB,KAAN,CAAY,gDAAZ,CAA8D,CAC5DC,QAAQ,CAAE,WADkD,CAE5DC,SAAS,CAAE,IAFiD,CAA9D,EAID,CACF,CAvBH,EAwBD,CA1B2B,EAArB,CA4BP,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACnB,OAAD,QAAa,UAACC,QAAD,CAAc,CACpDV,KAAK,CACFW,IADH,WAEOC,OAAO,CAACC,GAAR,CAAYC,iBAFnB,mBAGIL,OAHJ,EAMGW,IANH,CAMQ,SAACL,GAAD,CAAS,CAEbL,QAAQ,CAAC,CACPM,IAAI,CAAEX,YADC,CAEPY,OAAO,CAAEF,GAAG,CAACG,IAFN,CAAD,CAAR,CAID,CAZH,EAaGG,KAbH,CAaS,SAACC,GAAD,CAAS,CACdC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAqBF,GAArB,EACA,GAAIA,GAAJ,CAAS,CACPhB,KAAK,CAACmB,KAAN,CAAY,8CAAZ,CAA4D,CAC1DC,QAAQ,CAAE,WADgD,CAE1DC,SAAS,CAAE,IAF+C,CAA5D,EAID,CACF,CArBH,EAsBC,CAvBwB,EAApB","sourcesContent":["import axios from \"axios\";\n\nimport { tokenHeader } from \"../headersauth\";\nimport Swal from \"sweetalert2\";\nimport { POST_BASESPACE, POST_BIOSAMPLE, ADD_ANALYSIS } from \"./types\";\nimport { toast } from \"react-toastify\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntoast.configure();\n\n// projects\n\nexport const addBasespace = (project) => async (dispatch) => {\n   \n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URL}/api/projects/`,project,\n    \n    );\n    dispatch(\n      Swal(\n        'Your Project Saved','success'\n      )\n    )\n    dispatch({\n      type: POST_BASESPACE,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch(\n      Swal('Error Message ',  'error')\n    );\n  }\n} \n//Project ends\n\nexport const addBiosample = (project) => (dispatch) => {\n  \n  axios\n    .post(\n      `${process.env.REACT_APP_API_URL}/api/biosample/`,\n      project,\n      \n    )\n    .then((res) => {\n      \n      \n      dispatch({\n      \n        type: POST_BIOSAMPLE,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      console.log(\"Error\", err);\n      if (err) {\n        toast.error(\"Biosamples was not added plz check the details\", {\n          position: \"top-right\",\n          autoClose: 2000,\n        });\n      }\n    });\n};\n\nexport const addAnalysis = (project) => (dispatch) => {\n  axios\n    .post(\n      `${process.env.REACT_APP_API_URL}/api/analysis/`,\n      project,\n    \n    )\n    .then((res) => {\n    \n      dispatch({\n        type: ADD_ANALYSIS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      console.log(\"Error\", err);\n      if (err) {\n        toast.error(\"Analysis was not added plz check the details\", {\n          position: \"top-right\",\n          autoClose: 2000,\n        });\n      }\n    });\n  }\n\n\n\n\n\n\n\n\n\n\n  "]},"metadata":{},"sourceType":"module"}