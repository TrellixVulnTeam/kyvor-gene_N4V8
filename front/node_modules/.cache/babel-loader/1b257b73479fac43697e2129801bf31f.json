{"ast":null,"code":"import _regeneratorRuntime from\"/home/aravind/Desktop/newpro/kyvor-gene/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/aravind/Desktop/newpro/kyvor-gene/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";// import { tokenHeader } from \"../headersauth\";\n// import Swal from \"sweetalert2\";\nimport{POST_BASESPACE,POST_BIOSAMPLE,ADD_ANALYSIS,POST_BIOSAMPLE_ERROR,GET_ANALYSIS,DELETE_ANALYSIS}from\"./types\";import{toast}from\"react-toastify\";import\"react-toastify/dist/ReactToastify.css\";toast.configure();// projects\nexport var addBasespace=function addBasespace(project){return function(dispatch){axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/api/projects/\"),project).then(function(res){dispatch({type:POST_BASESPACE,payload:res.data});}).catch(function(err){console.log(\"Error\",err);if(err){toast.error(\"Your project was not added plz check the details\",{position:\"top-right\",autoClose:2000});}});};};//Project ends\n// export const addBiosample = (project) => (dispatch) => {\n//   axios\n//     .post(`${process.env.REACT_APP_API_URL}/api/biosample/`, project)\n//     .then((res) => {\n//       dispatch({\n//         type: POST_BIOSAMPLE,\n//         payload: res.data,\n//       });\n//     })\n//     .catch((err) => {\n//       console.log(\"Error\", err);\n//       if (err) {\n//         toast.error(\"Biosamples was not added plz check the details\", {\n//           position: \"top-right\",\n//           autoClose: 2000,\n//         });\n//       }\n//     });\n// };\nexport var addBiosample=function addBiosample(project){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/api/biosample/\"),project);case 3:res=_context.sent;dispatch({type:POST_BIOSAMPLE,payload:res.data});_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);dispatch({type:POST_BIOSAMPLE_ERROR,payload:_context.t0.response&&_context.t0.response.data.message?_context.t0.response.data.message:_context.t0.message});case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var getAnalysis=function getAnalysis(){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.get('http://localhost:8000/api/analysis/');case 2:res=_context2.sent;dispatch({type:GET_ANALYSIS,payload:res.data});case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var deleteAnalysis=function deleteAnalysis(id){return function(dispatch){axios.delete(\"http://localhost:8000/api/analysis/\".concat(id,\"/\")).then(function(res){dispatch({type:DELETE_ANALYSIS,payload:id});}).catch(function(err){return console.log(err);});};};","map":{"version":3,"sources":["/home/aravind/Desktop/newpro/kyvor-gene/front/src/actions/basespace.js"],"names":["axios","POST_BASESPACE","POST_BIOSAMPLE","ADD_ANALYSIS","POST_BIOSAMPLE_ERROR","GET_ANALYSIS","DELETE_ANALYSIS","toast","configure","addBasespace","project","dispatch","post","process","env","REACT_APP_API_URL","then","res","type","payload","data","catch","err","console","log","error","position","autoClose","addBiosample","response","message","getAnalysis","get","deleteAnalysis","id","delete"],"mappings":"qUAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA;AACA;AACA,OAASC,cAAT,CAAyBC,cAAzB,CAAyCC,YAAzC,CAAsDC,oBAAtD,CAA4EC,YAA5E,CAAyFC,eAAzF,KAA+G,SAA/G,CACA,OAASC,KAAT,KAAsB,gBAAtB,CAEA,MAAO,uCAAP,CAEAA,KAAK,CAACC,SAAN,GAEA;AACA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,OAAD,QAAa,UAACC,QAAD,CAAc,CACrDX,KAAK,CACFY,IADH,WACWC,OAAO,CAACC,GAAR,CAAYC,iBADvB,mBAC0DL,OAD1D,EAEGM,IAFH,CAEQ,SAACC,GAAD,CAAS,CACbN,QAAQ,CAAC,CACPO,IAAI,CAAEjB,cADC,CAEPkB,OAAO,CAAEF,GAAG,CAACG,IAFN,CAAD,CAAR,CAID,CAPH,EAQGC,KARH,CAQS,SAACC,GAAD,CAAS,CACdC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAqBF,GAArB,EACA,GAAIA,GAAJ,CAAS,CACPf,KAAK,CAACkB,KAAN,CAAY,kDAAZ,CAAgE,CAC9DC,QAAQ,CAAE,WADoD,CAE9DC,SAAS,CAAE,IAFmD,CAAhE,EAID,CACF,CAhBH,EAiBD,CAlB2B,EAArB,CAoBP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA,MAAO,IAAMC,CAAAA,YAAY,CAAE,QAAdA,CAAAA,YAAc,CAAClB,OAAD,iGAAW,iBAAMC,QAAN,gKAErBX,CAAAA,KAAK,CAACY,IAAN,WAAcC,OAAO,CAACC,GAAR,CAAYC,iBAA1B,oBAA8DL,OAA9D,CAFqB,QAEhCO,GAFgC,eAGtCN,QAAQ,CAAC,CACPO,IAAI,CAAEhB,cADC,CAEPiB,OAAO,CAAEF,GAAG,CAACG,IAFN,CAAD,CAAR,CAHsC,+EAQlCT,QAAQ,CAAC,CACPO,IAAI,CAACd,oBADE,CAEPe,OAAO,CACL,YAAMU,QAAN,EAAkB,YAAMA,QAAN,CAAeT,IAAf,CAAoBU,OAAtC,CACE,YAAMD,QAAN,CAAeT,IAAf,CAAoBU,OADtB,CAEE,YAAMA,OALH,CAAD,CAAR,CARkC,oEAAX,gEAApB,CA4BP,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,mGAAM,kBAAMpB,QAAN,qJACbX,CAAAA,KAAK,CAACgC,GAAN,CAAU,qCAAV,CADa,QACzBf,GADyB,gBAG/BN,QAAQ,CAAC,CAEPO,IAAI,CAAEb,YAFC,CAGPc,OAAO,CAAEF,GAAG,CAACG,IAHN,CAAD,CAAR,CAH+B,wDAAN,kEAApB,CAYP,MAAO,IAAMa,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,EAAD,QAAQ,UAACvB,QAAD,CAAc,CAClDX,KAAK,CACFmC,MADH,8CACgDD,EADhD,OAEGlB,IAFH,CAEQ,SAACC,GAAD,CAAS,CAEbN,QAAQ,CAAC,CACPO,IAAI,CAAEZ,eADC,CAEPa,OAAO,CAAEe,EAFF,CAAD,CAAR,CAID,CARH,EASGb,KATH,CASS,SAACC,GAAD,QAASC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT,EATT,EAUD,CAX6B,EAAvB","sourcesContent":["import axios from \"axios\";\n\n// import { tokenHeader } from \"../headersauth\";\n// import Swal from \"sweetalert2\";\nimport { POST_BASESPACE, POST_BIOSAMPLE, ADD_ANALYSIS,POST_BIOSAMPLE_ERROR ,GET_ANALYSIS,DELETE_ANALYSIS} from \"./types\";\nimport { toast } from \"react-toastify\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntoast.configure();\n\n// projects\nexport const addBasespace = (project) => (dispatch) => {\n  axios\n    .post(`${process.env.REACT_APP_API_URL}/api/projects/`, project)\n    .then((res) => {\n      dispatch({\n        type: POST_BASESPACE,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      console.log(\"Error\", err);\n      if (err) {\n        toast.error(\"Your project was not added plz check the details\", {\n          position: \"top-right\",\n          autoClose: 2000,\n        });\n      }\n    });\n};\n\n//Project ends\n\n// export const addBiosample = (project) => (dispatch) => {\n//   axios\n//     .post(`${process.env.REACT_APP_API_URL}/api/biosample/`, project)\n//     .then((res) => {\n//       dispatch({\n//         type: POST_BIOSAMPLE,\n//         payload: res.data,\n//       });\n//     })\n//     .catch((err) => {\n//       console.log(\"Error\", err);\n//       if (err) {\n//         toast.error(\"Biosamples was not added plz check the details\", {\n//           position: \"top-right\",\n//           autoClose: 2000,\n//         });\n//       }\n//     });\n// };\n\n\n\n\n\nexport const addBiosample =(project)=>async(dispatch)=>{\n  try{\nconst res= await axios.post(`${process.env.REACT_APP_API_URL}/api/biosample/`, project)\ndispatch({\n  type: POST_BIOSAMPLE,\n  payload: res.data\n});\n  }catch(error){\n    dispatch({\n      type:POST_BIOSAMPLE_ERROR,\n      payload: \n        error.response && error.response.data.message \n        ? error.response.data.message\n        : error.message\n      \n    })\n\n  }\n\n}\n\n\n\n\n\n\n\n\nexport const getAnalysis = () => async dispatch => {\n  const res = await axios.get('http://localhost:8000/api/analysis/');\n\n  dispatch({\n\n    type: GET_ANALYSIS,\n    payload: res.data\n  })\n}\n\n\n\nexport const deleteAnalysis = (id) => (dispatch) => {\n  axios\n    .delete(`http://localhost:8000/api/analysis/${id}/`)\n    .then((res) => {\n     \n      dispatch({\n        type: DELETE_ANALYSIS,\n        payload: id,\n      });\n    })\n    .catch((err) => console.log(err));\n};\n"]},"metadata":{},"sourceType":"module"}