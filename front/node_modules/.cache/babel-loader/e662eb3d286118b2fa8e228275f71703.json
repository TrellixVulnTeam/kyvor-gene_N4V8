{"ast":null,"code":"import axios from\"axios\";import{createMessage,returnErrors}from'./messages';import{tokenHeader}from\"../headersauth\";import{POST_BASESPACE,POST_BIOSAMPLE,ADD_ANALYSIS}from\"./types\";export var addBasespace=function addBasespace(project){return function(dispatch,getState){axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/api/projects/\"),project,tokenHeader(getState)).then(function(res){dispatch(createMessage({addBasespace:'Projects Added'}));dispatch({type:POST_BASESPACE,payload:res.data});}).catch(function(err){return dispatch(returnErrors(err.response.data,err.response.status));});};};export var addBiosample=function addBiosample(project){return function(dispatch,getState){axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/api/biosample/\"),project,tokenHeader(getState)).then(function(res){dispatch(createMessage({addBiosample:'BioSamples Added'}));dispatch({type:POST_BIOSAMPLE,payload:res.data});}).catch(function(err){return dispatch(returnErrors(err.response.data,err.response.status));});};};export var addAnalysis=function addAnalysis(project){return function(dispatch,getState){axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/api/analysis/\"),project,tokenHeader(getState)).then(function(res){dispatch(createMessage({addAnalysis:'BioSamples Added'}));dispatch({type:ADD_ANALYSIS,payload:res.data});}).catch(function(err){return dispatch(returnErrors(err.response.data,err.response.status));});};};","map":{"version":3,"sources":["/home/aravind/Desktop/newpro/kyvor-gene/front/src/actions/basespace.js"],"names":["axios","createMessage","returnErrors","tokenHeader","POST_BASESPACE","POST_BIOSAMPLE","ADD_ANALYSIS","addBasespace","project","dispatch","getState","post","process","env","REACT_APP_API_URL","then","res","type","payload","data","catch","err","response","status","addBiosample","addAnalysis"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,aAAT,CAAwBC,YAAxB,KAA4C,YAA5C,CACA,OAASC,WAAT,KAA4B,gBAA5B,CAEA,OAASC,cAAT,CAAyBC,cAAzB,CAAwCC,YAAxC,KAA2D,SAA3D,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,OAAD,QAAa,UAACC,QAAD,CAAWC,QAAX,CAAwB,CAC/DV,KAAK,CACFW,IADH,WAEOC,OAAO,CAACC,GAAR,CAAYC,iBAFnB,mBAGIN,OAHJ,CAIIL,WAAW,CAACO,QAAD,CAJf,EAMGK,IANH,CAMQ,SAACC,GAAD,CAAS,CACbP,QAAQ,CAACR,aAAa,CAAC,CAAEM,YAAY,CAAE,gBAAhB,CAAD,CAAd,CAAR,CACAE,QAAQ,CAAC,CACPQ,IAAI,CAAEb,cADC,CAEPc,OAAO,CAAEF,GAAG,CAACG,IAFN,CAAD,CAAR,CAID,CAZH,EAaGC,KAbH,CAaS,SAACC,GAAD,QAASZ,CAAAA,QAAQ,CAACP,YAAY,CAACmB,GAAG,CAACC,QAAJ,CAAaH,IAAd,CAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CAAjB,EAbT,EAcD,CAf2B,EAArB,CAmBP,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAChB,OAAD,QAAa,UAACC,QAAD,CAAWC,QAAX,CAAwB,CAC/DV,KAAK,CACFW,IADH,WAEOC,OAAO,CAACC,GAAR,CAAYC,iBAFnB,oBAGIN,OAHJ,CAIIL,WAAW,CAACO,QAAD,CAJf,EAMGK,IANH,CAMQ,SAACC,GAAD,CAAS,CACbP,QAAQ,CAACR,aAAa,CAAC,CAAEuB,YAAY,CAAE,kBAAhB,CAAD,CAAd,CAAR,CACAf,QAAQ,CAAC,CACPQ,IAAI,CAAEZ,cADC,CAEPa,OAAO,CAAEF,GAAG,CAACG,IAFN,CAAD,CAAR,CAID,CAZH,EAaGC,KAbH,CAaS,SAACC,GAAD,QAASZ,CAAAA,QAAQ,CAACP,YAAY,CAACmB,GAAG,CAACC,QAAJ,CAAaH,IAAd,CAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CAAjB,EAbT,EAcD,CAf2B,EAArB,CAkBP,MAAO,IAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACjB,OAAD,QAAa,UAACC,QAAD,CAAWC,QAAX,CAAwB,CAC9DV,KAAK,CACFW,IADH,WAEOC,OAAO,CAACC,GAAR,CAAYC,iBAFnB,mBAGIN,OAHJ,CAIIL,WAAW,CAACO,QAAD,CAJf,EAMGK,IANH,CAMQ,SAACC,GAAD,CAAS,CACbP,QAAQ,CAACR,aAAa,CAAC,CAAEwB,WAAW,CAAE,kBAAf,CAAD,CAAd,CAAR,CACAhB,QAAQ,CAAC,CACPQ,IAAI,CAAEX,YADC,CAEPY,OAAO,CAAEF,GAAG,CAACG,IAFN,CAAD,CAAR,CAID,CAZH,EAaGC,KAbH,CAaS,SAACC,GAAD,QAASZ,CAAAA,QAAQ,CAACP,YAAY,CAACmB,GAAG,CAACC,QAAJ,CAAaH,IAAd,CAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CAAjB,EAbT,EAcD,CAf0B,EAApB","sourcesContent":["import axios from \"axios\";\nimport { createMessage, returnErrors } from './messages';\nimport { tokenHeader } from \"../headersauth\";\n\nimport { POST_BASESPACE, POST_BIOSAMPLE,ADD_ANALYSIS} from \"./types\";\n\nexport const addBasespace = (project) => (dispatch, getState) => {\n  axios\n    .post(\n      `${process.env.REACT_APP_API_URL}/api/projects/`,\n      project,\n      tokenHeader(getState)\n    )\n    .then((res) => {\n      dispatch(createMessage({ addBasespace: 'Projects Added' }));\n      dispatch({\n        type: POST_BASESPACE,\n        payload: res.data,\n      });\n    })\n    .catch((err) => dispatch(returnErrors(err.response.data, err.response.status)));\n};\n\n\n\nexport const addBiosample = (project) => (dispatch, getState) => {\n  axios\n    .post(\n      `${process.env.REACT_APP_API_URL}/api/biosample/`,\n      project,\n      tokenHeader(getState)\n    )\n    .then((res) => {\n      dispatch(createMessage({ addBiosample: 'BioSamples Added' }));\n      dispatch({\n        type: POST_BIOSAMPLE,\n        payload: res.data,\n      });\n    })\n    .catch((err) => dispatch(returnErrors(err.response.data, err.response.status)));\n};\n\n\nexport const addAnalysis = (project) => (dispatch, getState) => {\n  axios\n    .post(\n      `${process.env.REACT_APP_API_URL}/api/analysis/`,\n      project,\n      tokenHeader(getState)\n    )\n    .then((res) => {\n      dispatch(createMessage({ addAnalysis: 'BioSamples Added' }));\n      dispatch({\n        type: ADD_ANALYSIS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => dispatch(returnErrors(err.response.data, err.response.status)));\n};\n\n\n"]},"metadata":{},"sourceType":"module"}