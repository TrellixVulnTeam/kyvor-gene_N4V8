[{"/home/aravind/Desktop/newpro/kyvor-gene/front/src/index.js":"1","/home/aravind/Desktop/newpro/kyvor-gene/front/src/i18n.js":"2","/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/App.js":"3","/home/aravind/Desktop/newpro/kyvor-gene/front/src/serviceWorker.js":"4","/home/aravind/Desktop/newpro/kyvor-gene/front/src/store.js":"5","/home/aravind/Desktop/newpro/kyvor-gene/front/src/Hocs/Layout.js":"6","/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/AppRoutes.js":"7","/home/aravind/Desktop/newpro/kyvor-gene/front/src/actions/auth.js":"8","/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/shared/Navbar.js":"9","/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/shared/SettingsPanel.js":"10","/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/shared/Footer.js":"11","/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/shared/Sidebar.js":"12","/home/aravind/Desktop/newpro/kyvor-gene/front/src/reducers/index.js":"13","/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/Projectform.js":"14","/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/shared/Spinner.js":"15","/home/aravind/Desktop/newpro/kyvor-gene/front/src/PrivateRoutes.js":"16","/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/shared/Profile.js":"17","/home/aravind/Desktop/newpro/kyvor-gene/front/src/actions/types.js":"18","/home/aravind/Desktop/newpro/kyvor-gene/front/src/User.js":"19","/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/basic-ui/Annovar.js":"20","/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/basic-ui/ReportsTable.js":"21","/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/basic-ui/Reports1.js":"22","/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/basic-ui/Basespace1.js":"23","/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/basic-ui/Basespace.js":"24","/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/basic-ui/Analysis2.js":"25","/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/basic-ui/Analysis.js":"26","/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/form-elements/BasicElements.js":"27","/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/user-pages/Google.js":"28","/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/form-elements/EditForm.js":"29","/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/form-elements/Patientform.js":"30","/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/dashboard/Dashboard.js":"31","/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/tables/BasicTable.js":"32","/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/user-pages/Login.js":"33","/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/error-pages/Error404.js":"34","/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/error-pages/Error500.js":"35","/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/icons/Mdi.js":"36","/home/aravind/Desktop/newpro/kyvor-gene/front/src/reducers/auth.js":"37","/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/user-pages/Time.js":"38","/home/aravind/Desktop/newpro/kyvor-gene/front/src/headersauth.js":"39","/home/aravind/Desktop/newpro/kyvor-gene/front/src/basespace/projects/Projectlist.js":"40","/home/aravind/Desktop/newpro/kyvor-gene/front/src/basespace/projects/Addproject.js":"41","/home/aravind/Desktop/newpro/kyvor-gene/front/src/basespace/projects/UpdateProject.js":"42","/home/aravind/Desktop/newpro/kyvor-gene/front/src/basespace/applications/Applicationlist.js":"43","/home/aravind/Desktop/newpro/kyvor-gene/front/src/basespace/applications/ApplicationDetail.js":"44","/home/aravind/Desktop/newpro/kyvor-gene/front/src/actions/basespace.js":"45","/home/aravind/Desktop/newpro/kyvor-gene/front/src/reducers/biosample.js":"46","/home/aravind/Desktop/newpro/kyvor-gene/front/src/reducers/basespace.js":"47","/home/aravind/Desktop/newpro/kyvor-gene/front/src/basespace/users/WhoAmI.js":"48","/home/aravind/Desktop/newpro/kyvor-gene/front/src/basespace/credits/Credits.js":"49","/home/aravind/Desktop/newpro/kyvor-gene/front/src/basespace/biosample/Biosample.js":"50","/home/aravind/Desktop/newpro/kyvor-gene/front/src/basespace/biosample/UpdateBioSample.js":"51","/home/aravind/Desktop/newpro/kyvor-gene/front/src/basespace/biosample/AddBiosample.js":"52","/home/aravind/Desktop/newpro/kyvor-gene/front/src/reducers/analysis.js":"53","/home/aravind/Desktop/newpro/kyvor-gene/front/src/basespace/analysis/AnalysisList.js":"54","/home/aravind/Desktop/newpro/kyvor-gene/front/src/basespace/analysis/AnalysisAdd.js":"55","/home/aravind/Desktop/newpro/kyvor-gene/front/src/basespace/analysis/UpdateAnalysis.js":"56","/home/aravind/Desktop/newpro/kyvor-gene/front/src/basespace/Headerssample.js":"57","/home/aravind/Desktop/newpro/kyvor-gene/front/src/basespace/projects/ProjectId.js":"58","/home/aravind/Desktop/newpro/kyvor-gene/front/src/history.js":"59","/home/aravind/Desktop/newpro/kyvor-gene/front/src/basespace/Modal.js":"60"},{"size":817,"mtime":1638770548543,"results":"61","hashOfConfig":"62"},{"size":14285,"mtime":1638340439411,"results":"63","hashOfConfig":"62"},{"size":525,"mtime":1639125739380,"results":"64","hashOfConfig":"62"},{"size":4961,"mtime":1638340439411,"results":"65","hashOfConfig":"62"},{"size":383,"mtime":1638340439411,"results":"66","hashOfConfig":"62"},{"size":1149,"mtime":1639125999396,"results":"67","hashOfConfig":"62"},{"size":6635,"mtime":1639549445024,"results":"68","hashOfConfig":"62"},{"size":5544,"mtime":1638782875636,"results":"69","hashOfConfig":"62"},{"size":3649,"mtime":1638867130663,"results":"70","hashOfConfig":"62"},{"size":778,"mtime":1638340439375,"results":"71","hashOfConfig":"62"},{"size":541,"mtime":1638867886201,"results":"72","hashOfConfig":"62"},{"size":5502,"mtime":1638866205850,"results":"73","hashOfConfig":"62"},{"size":275,"mtime":1639481877978,"results":"74","hashOfConfig":"62"},{"size":9116,"mtime":1638340439375,"results":"75","hashOfConfig":"62"},{"size":267,"mtime":1638340439375,"results":"76","hashOfConfig":"62"},{"size":644,"mtime":1638340439375,"results":"77","hashOfConfig":"62"},{"size":1295,"mtime":1638340439375,"results":"78","hashOfConfig":"62"},{"size":1585,"mtime":1639547726976,"results":"79","hashOfConfig":"62"},{"size":819,"mtime":1638340439375,"results":"80","hashOfConfig":"62"},{"size":2365,"mtime":1638340439375,"results":"81","hashOfConfig":"62"},{"size":7087,"mtime":1638860205705,"results":"82","hashOfConfig":"62"},{"size":4035,"mtime":1638340439375,"results":"83","hashOfConfig":"62"},{"size":5895,"mtime":1638340439375,"results":"84","hashOfConfig":"62"},{"size":3974,"mtime":1638856429267,"results":"85","hashOfConfig":"62"},{"size":10026,"mtime":1638782909851,"results":"86","hashOfConfig":"62"},{"size":5270,"mtime":1638784189062,"results":"87","hashOfConfig":"62"},{"size":7675,"mtime":1638340439375,"results":"88","hashOfConfig":"62"},{"size":912,"mtime":1638340439375,"results":"89","hashOfConfig":"62"},{"size":13748,"mtime":1638340439375,"results":"90","hashOfConfig":"62"},{"size":14413,"mtime":1639482296415,"results":"91","hashOfConfig":"62"},{"size":4864,"mtime":1638340439375,"results":"92","hashOfConfig":"62"},{"size":18155,"mtime":1638340439375,"results":"93","hashOfConfig":"62"},{"size":4373,"mtime":1638864985579,"results":"94","hashOfConfig":"62"},{"size":1186,"mtime":1638340439375,"results":"95","hashOfConfig":"62"},{"size":1172,"mtime":1638340439375,"results":"96","hashOfConfig":"62"},{"size":268345,"mtime":1638340439375,"results":"97","hashOfConfig":"62"},{"size":2450,"mtime":1639481822043,"results":"98","hashOfConfig":"62"},{"size":494,"mtime":1638340439375,"results":"99","hashOfConfig":"62"},{"size":152,"mtime":1638340439411,"results":"100","hashOfConfig":"62"},{"size":4953,"mtime":1639549765144,"results":"101","hashOfConfig":"62"},{"size":6706,"mtime":1639397244921,"results":"102","hashOfConfig":"62"},{"size":7212,"mtime":1639119873619,"results":"103","hashOfConfig":"62"},{"size":2030,"mtime":1639389672908,"results":"104","hashOfConfig":"62"},{"size":3899,"mtime":1638853294570,"results":"105","hashOfConfig":"62"},{"size":2276,"mtime":1639543516139,"results":"106","hashOfConfig":"62"},{"size":482,"mtime":1639482247603,"results":"107","hashOfConfig":"62"},{"size":295,"mtime":1639482238795,"results":"108","hashOfConfig":"62"},{"size":3134,"mtime":1638792061990,"results":"109","hashOfConfig":"62"},{"size":2521,"mtime":1639550547210,"results":"110","hashOfConfig":"62"},{"size":4398,"mtime":1639549748516,"results":"111","hashOfConfig":"62"},{"size":14212,"mtime":1639562887368,"results":"112","hashOfConfig":"62"},{"size":7906,"mtime":1639547080621,"results":"113","hashOfConfig":"62"},{"size":424,"mtime":1639482236099,"results":"114","hashOfConfig":"62"},{"size":4984,"mtime":1639549759564,"results":"115","hashOfConfig":"62"},{"size":8224,"mtime":1639476152526,"results":"116","hashOfConfig":"62"},{"size":8312,"mtime":1639044235998,"results":"117","hashOfConfig":"62"},{"size":117,"mtime":1639039255563,"results":"118","hashOfConfig":"62"},{"size":952,"mtime":1639463529309,"results":"119","hashOfConfig":"62"},{"size":87,"mtime":1638340439411,"results":"120","hashOfConfig":"62"},{"size":513,"mtime":1639473863439,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lh82do",{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"126"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"126"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"126"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"126"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/aravind/Desktop/newpro/kyvor-gene/front/src/index.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/i18n.js",[],["265","266"],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/App.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/serviceWorker.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/store.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/Hocs/Layout.js",["267"],"import React, { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { checkAuthenticated, load_user } from \"../actions/auth\";\nimport Navbar from \"../app/shared/Navbar\";\nimport Sidebar from \"../app/shared/Sidebar\";\nimport SettingsPanel from \"../app/shared/SettingsPanel\";\nimport Footer from \"../app/shared/Footer\";\nimport AppRoutes from \"../app/AppRoutes\";\n\nconst Layout = ({ checkAuthenticated, load_user }) => {\n  useEffect(() => {\n    checkAuthenticated();\n    load_user();\n  }, []);\n  const { pathname } = useLocation();\n\n  return (\n    <div className=\"container-scroller\">\n      {pathname !== \"/user-pages/login-1\" && <Navbar />}\n\n      <div className=\"container-fluid page-body-wrapper\">\n        {pathname !== \"/user-pages/login-1\" && <Sidebar />}\n        <div className=\"main-panel\">\n       \n          <div className=\"content-wrapper\">\n            \n            <AppRoutes />\n            <SettingsPanel />\n          </div>\n          \n          <Footer />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(null, { checkAuthenticated, load_user })(Layout);\n","/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/AppRoutes.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/actions/auth.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/shared/Navbar.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/shared/SettingsPanel.js",["268"],"import React, { Component } from 'react'\n\nexport class SettingsPanel extends Component {\n  render(){\n    return(\n      <div>\n\n      </div>\n    )\n  }\n}\n\n\nconst ListItem = (props) => {\n    \n  return (\n      <li className={(props.isCompleted ? 'completed' : null)}>\n          <div className=\"form-check\">\n              <label htmlFor=\"\" className=\"form-check-label\"> \n                  <input className=\"checkbox\" type=\"checkbox\" \n                      checked={props.isCompleted} \n                      onChange={props.changed} \n                      /> {props.children} <i className=\"input-helper\"></i>\n              </label>\n          </div>\n          <i className=\"remove mdi mdi-close-circle-outline\" onClick={props.remove}></i>\n      </li>\n  )\n};\nexport default SettingsPanel","/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/shared/Footer.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/shared/Sidebar.js",["269"],"import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Collapse } from \"react-bootstrap\";\nimport { Trans } from \"react-i18next\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nclass Sidebar extends Component {\n  static propTypes = {\n    auth: PropTypes.object.isRequired,\n  };\n\n  state = {};\n\n  toggleMenuState(menuState) {\n    if (this.state[menuState]) {\n      this.setState({ [menuState]: false });\n    } else if (Object.keys(this.state).length === 0) {\n      this.setState({ [menuState]: true });\n    } else {\n      Object.keys(this.state).forEach((i) => {\n        this.setState({ [i]: false });\n      });\n      this.setState({ [menuState]: true });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      this.onRouteChanged();\n    }\n  }\n\n  onRouteChanged() {\n    document.querySelector(\"#sidebar\").classList.remove(\"active\");\n    Object.keys(this.state).forEach((i) => {\n      this.setState({ [i]: false });\n    });\n\n    const dropdownPaths = [\n      { path: \"/apps\", state: \"appsMenuOpen\" },\n      { path: \"/basic-ui\", state: \"basicUiMenuOpen\" },\n     \n      { path: \"/form-elements\", state: \"formElementsMenuOpen\" },\n\n      { path: \"/user-pages\", state: \"userPagesMenuOpen\" },\n      { path: \"/error-pages\", state: \"errorPagesMenuOpen\" },\n     \n    ];\n\n    dropdownPaths.forEach((obj) => {\n      if (this.isPathActive(obj.path)) {\n        this.setState({ [obj.state]: true });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <nav className=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\n        <ul className=\"nav\">\n          <li\n            className={\n              this.isPathActive(\"/\") ? \"nav-item active\" : \"nav-item\"\n            }\n          >\n            <Link className=\"nav-link\" to=\"/\">\n              <span className=\"menu-title\">\n                <Trans>Dashboard</Trans>\n              </span>\n              <i className=\"mdi mdi-home menu-icon\"></i>\n            </Link>\n          </li>\n          <li\n            className={\n              this.isPathActive(\"/basic-ui/Analysis\")\n                ? \"nav-item active\"\n                : \"nav-item\"\n            }\n          >\n            <Link className=\"nav-link\" to=\"/basic-ui/Analysis\">\n              <span className=\"menu-title\">\n                <Trans>Analysis</Trans>\n              </span>\n              <i className=\"mdi mdi-file-find menu-icon\"></i>\n            </Link>\n          </li>\n          <li\n            className={\n              this.isPathActive(\"/basic-ui/reports\")\n                ? \"nav-item active\"\n                : \"nav-item\"\n            }\n          >\n            <Link className=\"nav-link\" to=\"/basic-ui/reports\">\n              <span className=\"menu-title\">\n                <Trans>Reports</Trans>\n              </span>\n              <i className=\"mdi mdi-information menu-icon\"></i>\n            </Link>\n          </li>\n          <li\n            className={\n              this.isPathActive(\"/basic-ui/Basespace\")\n                ? \"nav-item active\"\n                : \"nav-item\"\n            }\n          >\n            <Link className=\"nav-link\" to=\"/basic-ui/Basespace\">\n              <span className=\"menu-title\">\n                <Trans>Basespace</Trans>\n              </span>\n              <i className=\"mdi mdi-human-male-female menu-icon\"></i>\n            </Link>\n          </li>\n          <li\n            className={\n              this.isPathActive(\"/basic-ui/#\") ? \"nav-item active\" : \"nav-item\"\n            }\n          >\n            <Link className=\"nav-link\" to=\"/basic-ui/#\">\n              <span className=\"menu-title\">\n                <Trans>settings</Trans>\n              </span>\n              <i className=\"mdi mdi-settings menu-icon\"></i>\n            </Link>\n          </li>\n\n          {/*        \n           <li className={ this.isPathActive('/icons') ? 'nav-item active' : 'nav-item' }>\n            <div className={ this.state.iconsMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('iconsMenuOpen') } data-toggle=\"collapse\">\n              <span className=\"menu-title\"><Trans>Settings</Trans></span>\n              <i className=\"menu-arrow\"></i>\n              <i className=\"mdi mdi-settings\"></i>\n            </div>\n            <Collapse in={ this.state.iconsMenuOpen }>\n              <ul className=\"nav flex-column sub-menu\">\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/icons/mdi') ? 'nav-link active' : 'nav-link' } to=\"/icons/mdi\"><Trans>Material</Trans></Link></li>\n              </ul>\n            </Collapse>\n          </li> */}\n        </ul>\n      </nav>\n    );\n  }\n\n  isPathActive(path) {\n    return this.props.location.pathname.startsWith(path);\n  }\n\n  componentDidMount() {\n    this.onRouteChanged();\n    // add class 'hover-open' to sidebar navitem while hover in sidebar-icon-only menu\n    const body = document.querySelector(\"body\");\n    document.querySelectorAll(\".sidebar .nav-item\").forEach((el) => {\n      el.addEventListener(\"mouseover\", function () {\n        if (body.classList.contains(\"sidebar-icon-only\")) {\n          el.classList.add(\"hover-open\");\n        }\n      });\n      el.addEventListener(\"mouseout\", function () {\n        if (body.classList.contains(\"sidebar-icon-only\")) {\n          el.classList.remove(\"hover-open\");\n        }\n      });\n    });\n  }\n}\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default withRouter(connect(mapStateToProps)(Sidebar));\n","/home/aravind/Desktop/newpro/kyvor-gene/front/src/reducers/index.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/Projectform.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/shared/Spinner.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/PrivateRoutes.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/shared/Profile.js",["270"],"import React from \"react\";\nimport \"../../profile.css\";\nconst Profile = () => {\n  return (\n    <div>\n      <section class=\"profile\">\n        <header class=\"header\">\n          <div class=\"details\">\n            <img src=\"https://static.thenounproject.com/png/1121885-200.png\" />\n            <h1 class=\"heading\">Aravind</h1>\n            <div class=\"location\">\n              <svg\n                width=\"18\"\n                height=\"18\"\n                viewBox=\"0 0 24 24\"\n                fill=\"currentColor\"\n              >\n                <path d=\"M12,11.5A2.5,2.5 0 0,1 9.5,9A2.5,2.5 0 0,1 12,6.5A2.5,2.5 0 0,1 14.5,9A2.5,2.5 0 0,1 12,11.5M12,2A7,7 0 0,0 5,9C5,14.25 12,22 12,22C12,22 19,14.25 19,9A7,7 0 0,0 12 ,2Z\"></path>\n              </svg>\n              <p>chennai, India</p>\n            </div>\n            <div class=\"stats\">\n              <div class=\"col-4\">\n                <h4>20</h4>\n                <p>Reviews</p>\n              </div>\n              <div class=\"col-4\">\n                <h4>10</h4>\n                <p>Communities</p>\n              </div>\n              <div class=\"col-4\">\n                <h4>100</h4>\n                <p>Discussions</p>\n              </div>\n            </div>\n          </div>\n        </header>\n      </section>\n    </div>\n  );\n};\n\nexport default Profile;\n","/home/aravind/Desktop/newpro/kyvor-gene/front/src/actions/types.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/User.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/basic-ui/Annovar.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/basic-ui/ReportsTable.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/basic-ui/Reports1.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/basic-ui/Basespace1.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/basic-ui/Basespace.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/basic-ui/Analysis2.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/basic-ui/Analysis.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/form-elements/BasicElements.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/user-pages/Google.js",["271","272"],"import React, { useEffect } from \"react\";\nimport { Link, useLocation, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { googleAuthenticate } from \"../../actions/auth\";\nimport queryString from \"query-string\";\n\nconst Google = ({ googleAuthenticate, isAuthenticated }) => {\n  let location = useLocation();\n\n  useEffect(() => {\n    const values = queryString.parse(location.search);\n    const state = values.state ? values.state : null;\n    const code = values.code ? values.code : null;\n\n    console.log(\"State: \" + state);\n    console.log(\"Code: \" + code);\n\n    if (state && code) {\n      googleAuthenticate(state, code);\n    }\n  }, [location]);\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  } else if (!isAuthenticated) {\n    return <Redirect to=\"/user-pages/login-1\" />;\n  }\n\n  return <div></div>;\n};\n\nexport default connect(null, { googleAuthenticate })(Google);\n","/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/form-elements/EditForm.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/form-elements/Patientform.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/dashboard/Dashboard.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/tables/BasicTable.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/user-pages/Login.js",["273","274","275"],"import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../actions/auth\";\nimport axios from \"axios\";\nimport { Form } from \"react-bootstrap\";\nimport Time from \"./Time\";\nimport \"../../profile.css\";\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const { email, password } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    login(email, password);\n  };\n\n  const continueWithGoogle = async () => {\n    try {\n      const res = await axios.get(\n        `${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?redirect_uri=${process.env.REACT_APP_API_URL}/google`\n      );\n\n      window.location.replace(res.data.authorization_url);\n    } catch (err) {}\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div>\n      <div>\n      <div className=\"d-flex align-items-center auth px-0\">\n        \n        <div className=\"row w-100 mx-0\">\n          <div className=\"col-lg-6 mx-auto\">\n            <div className=\"auth-form-light text-center py-5 px-4 px-sm-5\"> \n            \n              <div className=\"brand-logo\">\n                <img\n                  src=\"https://media-exp1.licdn.com/dms/image/C510BAQFzmTl0wDAz9A/company-logo_200_200/0/1571652632244?e=2159024400&v=beta&t=eaKo0GEOitZiwddxEj0nHviaJUkB3IuudN4hfCTp4fE\"\n                  alt=\"logo\"\n                />\n                <div>\n                  <span>\n                    <Time />\n                  </span>\n                </div>\n              </div>\n              <h4>Hello, welcome to Kyvor </h4>\n              <h6 className=\"font-weight-light\">Sign in to continue.</h6>\n              <br/>\n              {/* <Form onSubmit={(e) => onSubmit(e)}>\n                <Form.Group className=\"d-flex search-field\">\n                  <Form.Control\n                    type=\"email\"\n                    placeholder=\"Email...\"\n                    size=\"lg\"\n                    className=\"h-auto\"\n                    name=\"email\"\n                    value={email}\n                    onChange={(e) => onChange(e)}\n                    required\n                  />\n                </Form.Group>\n                <Form.Group className=\"d-flex search-field\">\n                  <Form.Control\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    size=\"lg\"\n                    className=\"h-auto\"\n                    name=\"password\"\n                    value={password}\n                    onChange={(e) => onChange(e)}\n                    minLength=\"6\"\n                    required\n                  />\n                </Form.Group>\n                <div className=\"mt-3\">\n                  <button\n                    className=\"btn btn-block btn-primary btn-sm font-weight-medium auth-form-btn\"\n                    type=\"submit\"\n                  >\n                    SIGN IN\n                  </button>\n                </div>\n              </Form>\n              <div className=\"or-container\">\n                <div className=\"line-separator\"></div>\n                <div className=\"or-label\">or</div>\n                <div className=\"line-separator\"></div>\n              </div> */}\n              <div className=\"mb-2\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-lg btn-social-icon-text btn-google btn-block\"\n                  style={{backgroundColor:'#fec107'}}\n                  onClick={continueWithGoogle}\n                >\n                  <i className=\"mdi mdi-google-plus\"   style={{backgroundColor:'#fec107'}} ></i>Google\n                </button>\n                {/* <button type=\"button\" className=\"btn btn-lg btn-google btn-block text-uppercase btn-outline\" onClick={continueWithGoogle}>\n                     <img src=\"https://img.icons8.com/color/16/000000/google-logo.png\"/> Signup Using Google\n                    </button> */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      </div>\n    \n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/error-pages/Error404.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/error-pages/Error500.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/icons/Mdi.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/reducers/auth.js",["276","277"],"import {\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL,\n    PASSWORD_RESET_SUCCESS,\n    PASSWORD_RESET_FAIL,\n    PASSWORD_RESET_CONFIRM_SUCCESS,\n    PASSWORD_RESET_CONFIRM_FAIL,\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    ACTIVATION_SUCCESS,\n    ACTIVATION_FAIL,\n    GOOGLE_AUTH_SUCCESS,\n    GOOGLE_AUTH_FAIL,\n   \n    LOGOUT\n} from '../actions/types';\n\nconst initialState = {\n    access: localStorage.getItem('access'),\n    refresh: localStorage.getItem('refresh'),\n    isAuthenticated: null,\n    user: null\n};\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n        case AUTHENTICATED_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: true\n            }\n        case LOGIN_SUCCESS:\n        case GOOGLE_AUTH_SUCCESS:\n        \n            localStorage.setItem('access', payload.access);\n            localStorage.setItem('refresh', payload.refresh);\n            return {\n                ...state,\n                isAuthenticated: true,\n                access: payload.access,\n                refresh: payload.refresh\n            }\n        case SIGNUP_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: false\n            }\n        case USER_LOADED_SUCCESS:\n            return {\n                ...state,\n                user: payload\n            }\n        case AUTHENTICATED_FAIL:\n            return {\n                ...state,\n                isAuthenticated: false\n            }\n        case USER_LOADED_FAIL:\n            return {\n                ...state,\n                user: null\n            }\n        case GOOGLE_AUTH_FAIL:\n       \n        case LOGIN_FAIL:\n        case SIGNUP_FAIL:\n        case LOGOUT:\n            localStorage.removeItem('access');\n            localStorage.removeItem('refresh');\n            return {\n                ...state,\n                access: null,\n                refresh: null,\n                isAuthenticated: false,\n                user: null\n            }\n        case PASSWORD_RESET_SUCCESS:\n        case PASSWORD_RESET_FAIL:\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\n        case PASSWORD_RESET_CONFIRM_FAIL:\n        case ACTIVATION_SUCCESS:\n        case ACTIVATION_FAIL:\n            return {\n                ...state\n            }\n        default:\n            return state\n    }\n};","/home/aravind/Desktop/newpro/kyvor-gene/front/src/app/user-pages/Time.js",["278"],"import React, { Component } from \"react\";\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date(),\n    });\n  }\n\n  render() {\n    return this.state.date.toLocaleTimeString(\"en-US\");\n  }\n}\n\nexport default Clock;\n","/home/aravind/Desktop/newpro/kyvor-gene/front/src/headersauth.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/basespace/projects/Projectlist.js",["279"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { css } from \"glamor\";\nimport { toast } from \"react-toastify\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntoast.configure();\n\nclass ProjectList extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n    };\n  }\n\n  fetchData() {\n    fetch(\"http://localhost:8000/api/projects/\")\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({\n          data: data,\n        });\n      });\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  deleteData(id) {\n  \n      if (window.confirm(\"Are you sure want to delete the Project\")) {\n        fetch(\"http://localhost:8000/api/project/\" + id + \"/\", {\n          method: \"DELETE\",\n          body: JSON.stringify(this.state),\n        })\n         \n          .then((response) => response)\n          .then((data) => {\n            if (data.status === 500) {\n              console.log(data.status === 500);\n  \n              toast.error(\n                \"Project has been used by some other application! You cannot delete it\"\n              );\n            } else {\n              console.log(data);\n              toast.success(\"Project successfully deleted\");\n            }\n         \n            \n            if (data) {\n              this.fetchData();\n            }\n          });\n         \n      }\n    \n    \n  }\n  render() {\n    const ProjectData = this.state.data;\n    const rows = ProjectData.map((item) => (\n      <tr key={item.id}>\n        <td>{item.project_name}</td>\n        <td>{item.bs_default_project}</td>\n        <td>{item.bs_project_id}</td>\n        <td>{item.project_type}</td>\n        <td>{item.project_created_on}</td>\n        <td>{item.bs_user_id}</td>\n\n        <td>\n          <Link to={\"/project/update/\" + item.id}>\n            <EditIcon />\n          </Link>\n        </td>\n        <td>\n          <DeleteIcon onClick={() => this.deleteData(item.id)} />\n        </td>\n      </tr>\n    ));\n    return (\n      <div>\n        <div className=\"page-header\">\n          <h3 className=\"page-title\">Project Lists </h3>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-12 grid-margin\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-header d-flex justify-content-between align-items-center\">\n                  Project Lists\n                  <Link\n                    to=\"/basespace/projects/addproject\"\n                    style={{ textDecoration: \"none\" }}\n                  >\n                    <Button\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      startIcon={<AddIcon />}\n                    >\n                      Add Project\n                    </Button>\n                  </Link>\n                </h4>\n\n                {/* <div class=\"text-center\">\n                  <Link\n                    to=\"/basespace/projects/addproject\"\n                    className=\"btn btn-secondary text-dark\"\n                    style={{ backgroundColor: \"#fec107\", }}\n                  >\n                    {\" \"}\n                    ADD DETAILS\n                  </Link>\n                </div> */}\n                <hr />\n\n                <div className=\"table-responsive\">\n                  <table className=\"table table-bordered  table-hover\">\n                    <thead style={{ backgroundColor: \"#fec107\" }}>\n                      <tr>\n                        <th>\n                          <strong> Project Name</strong>\n                        </th>\n                        <th>\n                          {\" \"}\n                          <strong> BS Default Project</strong>{\" \"}\n                        </th>\n                        <th>\n                          {\" \"}\n                          <strong>Bs Project ID</strong>{\" \"}\n                        </th>\n                        <th>\n                          {\" \"}\n                          <strong>Project Type</strong>{\" \"}\n                        </th>\n                        <th>\n                          <strong> Project Created On</strong>{\" \"}\n                        </th>\n                        <th>\n                          {\" \"}\n                          <strong> Bs User Id</strong>{\" \"}\n                        </th>\n                        <th colSpan=\"2\">\n                          {\" \"}\n                          <strong>Actions</strong>{\" \"}\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>{rows}</tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProjectList;\n","/home/aravind/Desktop/newpro/kyvor-gene/front/src/basespace/projects/Addproject.js",["280","281"],"import React, { Component, Fragment } from \"react\";\n\nimport { Form } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { addBasespace } from \"../../actions/basespace\";\n\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { toast } from \"react-toastify\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntoast.configure();\n\nfunction validate(project_name) {\n  const errors = [];\n\n  if (project_name === \"\") {\n    errors.push(\"please enter you project Name\");\n  }\n  return errors;\n}\n\nexport class Add extends Component {\n  state = {\n    project_name: \"\",\n    bs_default_project: \"\",\n    bs_project_id: \"\",\n    project_type: \"\",\n    project_created_on: \"\",\n  };\n  static propTypes = {\n    addBasespace: PropTypes.func.isRequired,\n  };\n\n  // Input Change Handler\n  changeHandler(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const {\n      project_name,\n      bs_default_project,\n      bs_project_id,\n      project_type,\n      project_created_on,\n    } = this.state;\n    const basespace = {\n      project_name,\n      bs_default_project,\n      bs_project_id,\n      project_type,\n      project_created_on,\n    };\n    const errors = validate(project_name);\n    if (errors.length > 0) {\n      this.setState({\n        errors,\n      });\n\n      return;\n    } else if (errors.length === 0) {\n      toast.success(\"Project was added successfully\");\n    }\n    this.props.addBasespace(basespace, errors);\n\n    this.setState({\n      project_name: \"\",\n      bs_default_project: \"\",\n      bs_project_id: \"\",\n      project_type: \"\",\n      project_created_on: \"\",\n    });\n\n    this.props.history.push(\"/basespace/projects/list\");\n  };\n\n  render() {\n    const {\n      errors,\n      project_name,\n      bs_default_project,\n      bs_project_id,\n      project_type,\n      project_created_on,\n    } = this.state;\n    return (\n      <div>\n        <Fragment>\n          <div className=\"page-header\">\n            <h3 className=\"page-projectName\"> Adding Project Form </h3>\n            <nav aria-label=\"breadcrumb\">\n              <ol className=\"breadcrumb\">\n                <li className=\"breadcrumb-item\">\n                  <a href=\"!#\" onClick={(event) => event.preventDefault()}></a>\n                </li>\n              </ol>\n            </nav>\n          </div>\n\n          <div className=\" col-11 grid-margin stretch-card-1 \">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <form className=\"forms-sample\" onSubmit={this.onSubmit}>\n                  {errors &&\n                    errors.map((error) => (\n                      <div class=\"alert alert-danger alert-dismissible\"  role=\"alert\" key={error}>\n                        \n                        <strong>Error: {error}</strong>\n                      </div>\n                    ))}\n                  <Form.Group>\n                    <label htmlFor=\"exampleInputUsername1\">Project Name</label>\n                    <Form.Control\n                      type=\"text\"\n                      id=\"exampleInputUsername1\"\n                      placeholder=\"project Name\"\n                      size=\"lg\"\n                      value={project_name}\n                      name=\"project_name\"\n                      onChange={this.onChange}\n                      // required\n                    />\n                  </Form.Group>\n                  <Form.Group>\n                    <label htmlFor=\"exampleInputUsername1\">\n                      Basespace Default Project\n                    </label>\n                    <Form.Control\n                      type=\"text\"\n                      id=\"exampleInputUsername1\"\n                      placeholder=\"Basespace Default Project\"\n                      size=\"lg\"\n                      value={bs_default_project}\n                      name=\"bs_default_project\"\n                      onChange={this.onChange}\n                      required\n                    />\n                  </Form.Group>\n                  <Form.Group>\n                    <label id=\"inputGroupFile01\">Basespace Project Id</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"inputGroupFile01\"\n                      required\n                      placeholder=\"Basespace Project Id\"\n                      value={bs_project_id}\n                      name=\"bs_project_id\"\n                      onChange={this.onChange}\n                    />\n                  </Form.Group>\n                  <Form.Group>\n                    <label id=\"inputGroupFile02\">Project Type</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Project Type\"\n                      id=\"inputGroupFile02\"\n                      value={project_type}\n                      name=\"project_type\"\n                      onChange={this.onChange}\n                      required\n                    />\n                  </Form.Group>\n                  <Form.Group>\n                    <label id=\"inputGroupFile03\">Project Created On</label>\n                    <input\n                      type=\"date\"\n                      className=\"form-control\"\n                      id=\"inputGroupFile03\"\n                      placeholder=\"Project Created On\"\n                      value={project_created_on}\n                      name=\"project_created_on\"\n                      onChange={this.onChange}\n                      required\n                    />\n                  </Form.Group>\n\n                  <div className=\"col text-center\">\n                    <button\n                      type=\"submit\"\n                      className=\"btn  mr-2 btn-sm\"\n                      style={{ backgroundColor: \"#fec107\" }}\n                    >\n                      Submit\n                    </button>\n                  </div>\n                </form>\n                <div className=\"border border-light p-3 mb-4\">\n                  <div className=\"text-center\">\n                    <span>\n                      <Link to=\"/basic-ui/Basespace\">\n                        <button className=\"btn btn-light btn-sm\">\n                          {\" \"}\n                          Cancel\n                        </button>\n                      </Link>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Fragment>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { addBasespace })(Add);\n","/home/aravind/Desktop/newpro/kyvor-gene/front/src/basespace/projects/UpdateProject.js",["282","283","284"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { baseURL, headers } from \"../Headerssample\";\n\nconst UpdateProject = () => {\n  const initialMenuState = {\n    id: null,\n    project_name: \"\",\n    bs_default_project: \"\",\n    bs_project_id: \"\",\n    project_type: \"\",\n    project_created_on: \"\",\n    bs_user_id: \"\",\n  };\n\n  let { id } = useParams();\n\n  const [currentMenu, setCurrentMenu] = useState(initialMenuState);\n  const [submitted, setSubmitted] = useState(false);\n\n  useEffect(() => {\n    retrieveMenu();\n  }, []);\n\n  const handleMenuChange = (e) => {\n    const { name, value } = e.target;\n    setCurrentMenu({ ...currentMenu, [name]: value });\n  };\n\n  const retrieveMenu = () => {\n    axios\n      .get(`${baseURL}/project/${id}/`, {\n        headers: {\n          headers,\n        },\n      })\n      .then((response) => {\n        setCurrentMenu({\n          id: response.data.id,\n          project_name: response.data.project_name,\n          bs_default_project: response.data.bs_default_project,\n          bs_project_id: response.data.bs_project_id,\n          project_type: response.data.project_type,\n          project_created_on: response.data.project_created_on,\n          bs_user_id: response.data.bs_user_id,\n        });\n        console.log(currentMenu);\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n  };\n\n  const updateMenu = () => {\n    let data = {\n      project_name: currentMenu.project_name,\n      bs_default_project: currentMenu.bs_default_project,\n      bs_project_id: currentMenu.bs_project_id,\n      project_type: currentMenu.project_type,\n      project_created_on: currentMenu.project_created_on,\n      bs_user_id: currentMenu.bs_user_id,\n    };\n\n    axios\n      .put(`${baseURL}/project/${id}/`, data, {\n        headers: {\n          headers,\n        },\n      })\n      .then((response) => {\n        setCurrentMenu({\n          id: response.data.id,\n          project_name: response.data.project_name,\n          bs_default_project: response.data.bs_default_project,\n          bs_project_id: response.data.bs_project_id,\n          project_type: response.data.project_type,\n          project_created_on: response.data.project_created_on,\n          bs_user_id: response.data.bs_user_id,\n        });\n        setSubmitted(true);\n        console.log(response.data);\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n  };\n\n  const newMenu = () => {\n    setCurrentMenu(initialMenuState);\n    setSubmitted(false);\n  };\n\n  return (\n    <div>\n\n    <div className=\"page-header\">\n          <h3 className=\"page-projectName\"> Updating Project Form </h3>\n          <nav aria-label=\"breadcrumb\">\n            <ol className=\"breadcrumb\">\n              <li className=\"breadcrumb-item\">\n                <a href=\"!#\" onClick={(event) => event.preventDefault()}></a>\n              </li>\n            </ol>\n          </nav>\n        </div>\n    <div className=\" col-11 grid-margin stretch-card-1 \">\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <div className=\"submit-form\">\n            {submitted ? (\n              <div>\n                <div\n                  className=\"alert alert-success alert-dismissible fade show\"\n                  role=\"alert\"\n                >\n                  Project Updated!\n                </div>\n                <Link to=\"/basespace/projects/list\">\n                  {\" \"}\n                  <button\n                    className=\"btn\"\n                    style={{ backgroundColor: \"#fec107\" }}\n                  >\n                    Back\n                  </button>\n                </Link>\n              </div>\n            ) : (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Project Name</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"name\"\n                    required\n                    value={currentMenu.project_name}\n                    onChange={handleMenuChange}\n                    name=\"project_name\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Bs Default Project</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"name\"\n                    required\n                    value={currentMenu.bs_default_project}\n                    onChange={handleMenuChange}\n                    name=\"bs_default_project\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Bs Project Id</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"name\"\n                    required\n                    value={currentMenu.bs_project_id}\n                    onChange={handleMenuChange}\n                    name=\"bs_project_id\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Project Type</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"name\"\n                    required\n                    value={currentMenu.project_type}\n                    onChange={handleMenuChange}\n                    name=\"project_type\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Project Created On</label>\n                  <input\n                    type=\"date\"\n                    className=\"form-control\"\n                    id=\"name\"\n                    required\n                    value={currentMenu.project_created_on}\n                    onChange={handleMenuChange}\n                    name=\"project_created_on\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Bs User Id</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"name\"\n                    required\n                    value={currentMenu.bs_user_id}\n                    onChange={handleMenuChange}\n                    name=\"bs_user_id\"\n                  />\n                </div>\n                <div className=\"col text-center\">\n                <button\n                  onClick={updateMenu}\n                  className=\"btn\"\n                  style={{ backgroundColor: \"#fec107\" }}\n                >\n                  Update\n                </button>\n                <Link to=\"/basespace/projects/list\">\n                  {\" \"}\n                  <button\n                    className=\"btn\"\n                    style={{ backgroundColor: \"#fec107\" }}\n                  >\n                    Back\n                  </button>\n                </Link>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    </div>\n\n  );\n};\n\nexport default UpdateProject;\n","/home/aravind/Desktop/newpro/kyvor-gene/front/src/basespace/applications/Applicationlist.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/basespace/applications/ApplicationDetail.js",["285"],"import React from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport { Card } from \"react-bootstrap\";\nimport \"./style.css\";\nconst ViewUserDetails = (_) => {\n  const { state } = useLocation();\n\n  return (\n    <div>\n      <Form>\n        <div className=\"row justify-content-center\">\n          <div className=\"col-10 justify-content-center\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-header d-flex justify-content-between align-items-center\">\n                  Id: {state.applications.Id}\n                  <Link\n                    to=\"/basespace/applicationlist\"\n                    style={{ textDecoration: \"none\" }}\n                  >\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-sm\"\n                      style={{ backgroundColor: \"#fec107\" }}\n                    >\n                      Back{\" \"}\n                    </button>\n                  </Link>\n                </h4>\n\n                <div className=\"table-responsive\">\n                  <table className=\"table table-bordered  table-hover\">\n                    <tbody>\n                      <tr>\n                        <th>Full Name</th>\n                        <td>{state.applications.Name}</td>\n                      </tr>\n                      <tr>\n                        <th>Href</th>\n                        <td>{state.applications.Href}</td>\n                      </tr>\n                      <tr>\n                        <th>HrefLogo</th>\n                        <td>{state.applications.HrefLogo}</td>\n                      </tr>\n                      <tr>\n                        <th>CompanyName</th>\n                        <td>{state.applications.CompanyName}</td>\n                      </tr>\n                      <tr>\n                        <th>HomepageUri</th>\n                        <td>{state.applications.HomepageUri}</td>\n                      </tr>\n                      <tr>\n                        <th>PublishStatus</th>\n                        <td>{state.applications.PublishStatus}</td>\n                      </tr>\n                      <tr>\n                        <th>IsBillingActivated</th>\n                        <td>{state.applications.IsBillingActivated}</td>\n                      </tr>\n                      {/* <tr>\n                        <th>Features</th>\n                        <td>\n                            {state.applications.Features}\n                        </td>\n                    </tr> */}\n                      <tr>\n                        <th>AppFamilySlug</th>\n                        <td>{state.applications.AppFamilySlug}</td>\n                      </tr>\n                      <tr>\n                        <th>AppVersionSlug</th>\n                        <td>{state.applications.AppVersionSlug}</td>\n                      </tr>\n                      <tr>\n                        <th>Category</th>\n                        <td>{state.applications.Category}</td>\n                      </tr>\n                      <tr>\n                        <th>DateCreated</th>\n                        <td>{state.applications.DateCreated}</td>\n                      </tr>\n                      <tr>\n                        <th>DatePublished</th>\n                        <td>{state.applications.DatePublished}</td>\n                      </tr>\n                      {/* <tr>\n                        <th>Classification</th>\n                        <td>\n                            {state.applications.Classification}\n                        </td>\n                    </tr>\n                    */}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nexport default ViewUserDetails;\n","/home/aravind/Desktop/newpro/kyvor-gene/front/src/actions/basespace.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/reducers/biosample.js",["286"],"import { POST_BIOSAMPLE, POST_BIOSAMPLE_ERROR } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  error: null,\n};\n\nexport default function (state=initialState, action) {\n  switch (action.type) {\n    case POST_BIOSAMPLE:\n      return {\n        ...state,\n        projects: [...state.projects, action.payload],\n      };\n    case POST_BIOSAMPLE_ERROR:\n      return {\n        projects: [],\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","/home/aravind/Desktop/newpro/kyvor-gene/front/src/reducers/basespace.js",["287"],"import { POST_BASESPACE } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case POST_BASESPACE:\n      return { ...state, projects: action.payload };\n\n    default:\n      return state;\n  }\n}\n","/home/aravind/Desktop/newpro/kyvor-gene/front/src/basespace/users/WhoAmI.js",["288"],"import Form from \"react-bootstrap/Form\";\nimport React, { useState, useEffect } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { Link } from \"react-router-dom\";\nconst WhoAmI = () => {\n    let [applications, setApplications] = useState([]);\n\n  useEffect(() => {\n    getApplications();\n  }, []);\n\n  let getApplications = async () => {\n    let response = await fetch(\"http://127.0.0.1:8000/api/users/\");\n    let data = await response.json();\n\n    let new_data = data.Response;\n    // console.log(data)\n    console.log(new_data);\n    setApplications(new_data);\n  };\n    return (\n        <div>\n            <Form>\n        <div className=\"row justify-content-center\">\n          <div className=\"col-10 justify-content-center\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-header d-flex justify-content-between align-items-center\">\n                  Id: {applications.Id}\n                  <Link\n                    to=\"/basic-ui/Basespace\"\n                    style={{ textDecoration: \"none\" }}\n                  >\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-sm\"\n                      style={{ backgroundColor: \"#fec107\" }}\n                    >\n                      Back{\" \"}\n                    </button>\n                  </Link>\n                </h4>\n\n                <div className=\"table-responsive\">\n                  <table className=\"table table-bordered  table-hover\">\n                    <tbody>\n                      <tr>\n                        <th>Name</th>\n                        <td>{applications.Name}</td>\n                      </tr>\n                      <tr>\n                        <th>Email</th>\n                        <td>{applications.Email}</td>\n                      </tr>\n                     \n                       <tr>\n                        <th>DateCreated</th>\n                        <td>\n                            {applications.DateCreated}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>DateLastActive</th>\n                        <td>\n                            {applications.DateLastActive}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>Href</th>\n                        <td>\n                            {applications.Href}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>HrefProjects</th>\n                        <td>\n                            {applications.HrefProjects}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>HrefRuns</th>\n                        <td>\n                            {applications.HrefRuns}\n                        </td>\n                    </tr>\n                    \n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Form>\n        </div>\n    )\n}\n\nexport default WhoAmI\n","/home/aravind/Desktop/newpro/kyvor-gene/front/src/basespace/credits/Credits.js",["289"],"import Form from \"react-bootstrap/Form\";\nimport React, { useState, useEffect } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { Link } from \"react-router-dom\";\nconst WhoAmI = () => {\n  let [applications, setApplications] = useState([]);\n\n  useEffect(() => {\n    getApplications();\n  }, []);\n\n  let getApplications = async () => {\n    let response = await fetch(\"http://127.0.0.1:8000/api/credits/\");\n    let data = await response.json();\n\n    let new_data = data.Wallet;\n    // console.log(data)\n    console.log(new_data);\n    setApplications(new_data);\n  };\n  return (\n    <div>\n      <div style={{ maxWidth: \"90%\", margin: \"5vh auto\" }}>\n        <div className=\"page-header\">\n          <h3 className=\"page-title\">\n            <span className=\"page-title-icon bg-gradient-primary text-white mr-2\">\n              <i\n                className=\"mdi mdi-credit-card \"\n                style={{ color: \"black\" }}\n              ></i>\n            </span>{\" \"}\n            Credits Remaning{\" \"}\n          </h3>\n          <br />\n        </div>\n      </div>\n\n      <Form>\n        <div className=\"row justify-content-center\">\n          <div className=\"col-8 justify-content-center\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-header d-flex justify-content-between align-items-center\">\n                  Credits\n                  <Link\n                    to=\"/basic-ui/Basespace\"\n                    style={{ textDecoration: \"none\" }}\n                  >\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-sm\"\n                      style={{ backgroundColor: \"#fec107\" }}\n                    >\n                      Back{\" \"}\n                    </button>\n                  </Link>\n                </h4>\n\n                <div className=\"table-responsive\">\n                  <table className=\"table table-bordered  table-hover\">\n                    <tbody>\n                      <tr>\n                        <th>ICreditBalance</th>\n                        <td>{applications.ICreditBalance}</td>\n                      </tr>\n                      <tr>\n                        <th>ICreditUsage</th>\n                        <td>{applications.ICreditUsage}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nexport default WhoAmI;\n","/home/aravind/Desktop/newpro/kyvor-gene/front/src/basespace/biosample/Biosample.js",["290"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { ToastContainer, toast } from \"react-toastify\";\nclass Biosample extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n    };\n  }\n\n  fetchData() {\n    fetch(\"http://localhost:8000/api/biosample/\")\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({\n          data: data,\n        });\n      });\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  \n\n  deleteData(id) {\n  \n    if (window.confirm(\"Are you sure want to delete the Biosample\")) {\n      fetch(\"http://localhost:8000/api/biosamples/\" + id + \"/\", {\n        method: \"DELETE\",\n        body: JSON.stringify(this.state),\n      })\n       \n        .then((response) => response)\n        .then((data) => {\n          if (data.status === 500) {\n            console.log(data.status === 500);\n\n            toast.error(\n              \"Biosamples not deleted Plz check the server\"\n            );\n          } else {\n            console.log(data);\n            toast.success(\"Biosamples successfully deleted\");\n          }\n       \n          \n          if (data) {\n            this.fetchData();\n          }\n        });\n       \n    }\n  \n  \n}\n\n  render() {\n    const BiosampleData = this.state.data;\n    const rows = BiosampleData.map((item) => (\n      <tr key={item.id}>\n        <td>{item.biosample_id}</td>\n        <td>{item.biosample_type}</td>\n        <td>{item.biosample_name}</td>\n        <td>{item.biosample_path}</td>\n        <td>{item.library_id}</td>\n        <td>{item.biosample_created_on}</td>\n\n        <td>\n          <Link to={\"/update/\" + item.id}>\n            <EditIcon />\n          </Link>\n        </td>\n        <td>\n          <DeleteIcon onClick={() => this.deleteData(item.id)} />\n        </td>\n      </tr>\n    ));\n    return (\n      <div>\n        <div className=\"page-header\">\n          <h3 className=\"page-title\">BioSampleLists </h3>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-12 grid-margin\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-header d-flex justify-content-between align-items-center\">\n                  BioSample Lists\n                  <Link\n                    to=\"/basespace/addbiosample\"\n                    style={{ textDecoration: \"none\" }}\n                  >\n                    <Button\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      startIcon={<AddIcon />}\n                    >\n                      Add Biosample\n                    </Button>\n                  </Link>\n                </h4>\n\n                <hr />\n\n                <div className=\"table-responsive\">\n                  <table className=\"table table-bordered  table-hover\">\n                    <thead style={{ backgroundColor: \"#fec107\" }}>\n                      <tr>\n                        <th>\n                          <strong> BioSampleId</strong>\n                        </th>\n                        <th>\n                          {\" \"}\n                          <strong> BioSmapleType</strong>{\" \"}\n                        </th>\n                        <th>\n                          {\" \"}\n                          <strong>BioSampleName</strong>{\" \"}\n                        </th>\n                        <th>\n                          {\" \"}\n                          <strong>BioSamplePath</strong>{\" \"}\n                        </th>\n                        <th>\n                          <strong>LibraryId</strong>{\" \"}\n                        </th>\n                        <th>\n                          {\" \"}\n                          <strong> Created On</strong>{\" \"}\n                        </th>\n                        <th colSpan=\"2\">\n                          {\" \"}\n                          <strong>Actions</strong>{\" \"}\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>{rows}</tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Biosample;\n","/home/aravind/Desktop/newpro/kyvor-gene/front/src/basespace/biosample/UpdateBioSample.js",["291","292","293"],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/basespace/biosample/AddBiosample.js",["294","295","296"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Form } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { addBiosample } from \"../../actions/basespace\";\nimport { toast } from \"react-toastify\";\nimport Multi from \"../projects/ProjectId\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntoast.configure();\nfunction validate(biosample_name) {\n  const errors = [];\n\n  if (biosample_name === \"\") {\n    errors.push(\"please enter you biosample Name\");\n    \n  }\n  return errors;\n}\nexport class AddBiosample extends Component {\n  state = {\n    biosample_id: \"\",\n    biosample_type: \"\",\n    biosample_name: \"\",\n    biosample_path: \"\",\n    library_id: \"\",\n    biosample_created_on: \"\",\n    project_id: \"\",\n  };\n  static propTypes = {\n    addBiosample: PropTypes.func.isRequired,\n  };\n\n  // Input Change Handler\n  changeHandler(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const {\n      biosample_id,\n      biosample_type,\n      biosample_name,\n      biosample_path,\n      library_id,\n      biosample_created_on,\n      project_id,\n    } = this.state;\n    const biosample = {\n      biosample_id,\n      biosample_type,\n      biosample_name,\n      biosample_path,\n      library_id,\n      biosample_created_on,\n      project_id,\n    };\n    const errors = validate(biosample_name);\n    if (errors.length > 0) {\n      this.setState({ errors });\n      return;\n    } else if (errors.length === 0) {\n      toast.success(\"Required Fields Are Entered Correctly\");\n    }\n    \n    this.props.addBiosample(biosample, errors);\n\n    this.setState({\n      biosample_id: \"\",\n      biosample_type: \"\",\n      biosample_name: \"\",\n      biosample_path: \"\",\n      library_id: \"\",\n      biosample_created_on: \"\",\n      project_id: \"\",\n    });\n    this.props.history.push(\"/basespace/biosample\");\n  };\n\n  render() {\n    const {\n      errors,\n      biosample_id,\n      biosample_type,\n      biosample_name,\n      biosample_path,\n      library_id,\n      biosample_created_on,\n      project_id,\n    } = this.state;\n\n    return (\n      <div>\n        <div className=\"page-header\">\n          <h3 className=\"page-projectName\"> Adding BioSample Form </h3>\n          <nav aria-label=\"breadcrumb\">\n            <ol className=\"breadcrumb\">\n              <li className=\"breadcrumb-item\">\n                <a href=\"!#\" onClick={(event) => event.preventDefault()}></a>\n              </li>\n            </ol>\n          </nav>\n        </div>\n\n        <div className=\" col-11 grid-margin stretch-card-1 \">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <form className=\"forms-sample\" onSubmit={this.onSubmit}>\n                {errors &&\n                  errors.map((error) => (\n                    <div\n                      class=\"alert alert-danger alert-dismissible\"\n                      role=\"alert\"\n                      key={error}\n                    >\n                      <strong>Error: {error}</strong>\n                    </div>\n                  ))}\n                <Form.Group>\n                  <label htmlFor=\"exampleInputUsername1\">BioSample Id</label>\n                  <Form.Control\n                    type=\"text\"\n                    id=\"exampleInputUsername1\"\n                    placeholder=\"BioSample Id\"\n                    size=\"lg\"\n                    value={biosample_id}\n                    name=\"biosample_id\"\n                    onChange={this.onChange}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <label htmlFor=\"exampleInputUsername1\">BioSample Type</label>\n                  <Form.Control\n                    type=\"text\"\n                    id=\"exampleInputUsername1\"\n                    placeholder=\"BioSample Type\"\n                    size=\"lg\"\n                    value={biosample_type}\n                    name=\"biosample_type\"\n                    onChange={this.onChange}\n                    required\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <label id=\"inputGroupFile01\">BioSample Name</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"inputGroupFile01\"\n                    placeholder=\"BioSample Name\"\n                    value={biosample_name}\n                    name=\"biosample_name\"\n                    onChange={this.onChange}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <label id=\"inputGroupFile02\">BioSample Path</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"BioSample Path\"\n                    id=\"inputGroupFile02\"\n                    value={biosample_path}\n                    name=\"biosample_path\"\n                    onChange={this.onChange}\n                    required\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <label id=\"inputGroupFile03\">Library Id</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"inputGroupFile03\"\n                    placeholder=\"Library Id\"\n                    value={library_id}\n                    name=\"library_id\"\n                    onChange={this.onChange}\n                    required\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <label id=\"inputGroupFile04\">BioSample Created On</label>\n                  <input\n                    type=\"date\"\n                    className=\"form-control\"\n                    id=\"inputGroupFile04\"\n                    value={biosample_created_on}\n                    name=\"biosample_created_on\"\n                    placeholder=\"BioSample Created On\"\n                    onChange={this.onChange}\n                    required\n                  />\n                </Form.Group>\n                {/* <FormControl\n                  name=\"project_id\"\n                  componentClass=\"select\"\n                  onChange={this.on}\n                >\n                  {userlist.map((r, i) => (\n                    <option key={i} value={r.id}>\n                      {r.name}\n                    </option>\n                  ))}\n                </FormControl> */}\n                <Form.Group>\n                  <label id=\"inputGroupFile05\">Project Name</label>\n                  <input\n                    id=\"inputGroupFile05\"\n                    type=\"text\"\n                    placeholder=\"Project Name\"\n                    className=\"form-control\"\n                    value={project_id}\n                    name=\"project_id\"\n                    onChange={this.onChange}\n                    required\n                  />\n                </Form.Group>\n\n                <div className=\"col text-center\">\n                  <button\n                    type=\"submit\"\n                    className=\"btn  mr-2 btn-sm\"\n                    style={{ backgroundColor: \"#fec107\" }}\n                  >\n                    Submit\n                  </button>\n                </div>\n              </form>\n              <div className=\"border border-light p-3 mb-4\">\n                <div className=\"text-center\">\n                  <span>\n                    <Link to=\"/basic-ui/Basespace\">\n                      <button className=\"btn btn-light btn-sm\"> Cancel</button>\n                    </Link>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { addBiosample })(AddBiosample);\n","/home/aravind/Desktop/newpro/kyvor-gene/front/src/reducers/analysis.js",["297"],"import {\n\n    ADD_ANALYSIS\n   \n   } from \"../actions/types\";\n   \n   const initialState = {\n     analysis: [],\n    \n   };\n   \n   export default function (state = initialState, action) {\n     switch(action.type) {\n       \n       case ADD_ANALYSIS:\n         return {\n           ...state,\n           analysis: [...state.analysis, action.payload],\n         };\n        \n \n       \n       default:\n         return state;\n     }\n   }","/home/aravind/Desktop/newpro/kyvor-gene/front/src/basespace/analysis/AnalysisList.js",["298"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { ToastContainer, toast } from \"react-toastify\";\nclass AnalysisList extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n    };\n  }\n\n  fetchData() {\n    fetch(\"http://localhost:8000/api/analysis/\")\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({\n          data: data,\n        });\n      });\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  \n  deleteData(id) {\n  \n    if (window.confirm(\"Are you sure want to delete the Analysis\")) {\n      fetch(\"http://localhost:8000/api/analysis/\" + id + \"/\", {\n        method: \"DELETE\",\n        body: JSON.stringify(this.state),\n      })\n       \n        .then((response) => response)\n        .then((data) => {\n          if (data.status === 500) {\n            console.log(data.status === 500);\n\n            toast.error(\n              \"Analysis not deleted Plz check the server\"\n            );\n          } else {\n            console.log(data);\n            toast.success(\"Analysis successfully deleted\");\n          }\n       \n          \n          if (data) {\n            this.fetchData();\n          }\n        });\n       \n    }\n  \n  \n}\n  render() {\n    const Analysis = this.state.data;\n    const rows = Analysis.map((analysis) => (\n      <tr key={analysis.id}>\n        <td>{analysis.analysis_type}</td>\n        <td>{analysis.analysis_ref_id}</td>\n        <td>{analysis.analysis_status}</td>\n        <td>{analysis.analysis_description}</td>\n        <td>{analysis.analysis_timestamp}</td>\n        <td>{analysis.bs_analysis_id}</td>\n        <td>{analysis.bs_analysis_status}</td>\n        <td>{analysis.bs_analysis_name}</td>\n\n        <td>\n          <Link to={\"/analysis/update/\" + analysis.id}>\n            \n            <EditIcon/>\n            \n            </Link>\n        </td>\n        <td>\n           \n          <DeleteIcon\n            onClick={() => this.deleteData(analysis.id)}\n            \n          />\n          \n          \n        </td>\n      </tr>\n    ));\n\n    return (\n      <div>\n        <div className=\"page-header\">\n          <h3 className=\"page-title\">Analysis Lists </h3>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-12 grid-margin\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-header d-flex justify-content-between align-items-center\">\n                  Analysis list\n                  <Link\n                    to=\"/basespace/projects/analysis/add\"\n                    style={{ textDecoration: \"none\" }}\n                  >\n                    <Button\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      startIcon={<AddIcon />}\n                    >\n                      Add Analyis\n                    </Button>\n                  </Link>\n                </h4>\n\n                <hr />\n\n                <div className=\"table-responsive\">\n                  <table className=\"table table-bordered  table-hover\">\n                    <thead style={{ backgroundColor: \"#fec107\" }}>\n                      <tr>\n                        <th>\n                          <strong> analysis_type</strong>\n                        </th>\n                        <th>\n                          {\" \"}\n                          <strong> analysis_ref_id</strong>{\" \"}\n                        </th>\n                        <th>\n                          {\" \"}\n                          <strong> analysis_status</strong>{\" \"}\n                        </th>\n                        <th>\n                          {\" \"}\n                          <strong> analysis_description</strong>{\" \"}\n                        </th>\n                        <th>\n                          <strong> analysis_timestamp</strong>{\" \"}\n                        </th>\n                        <th>\n                          {\" \"}\n                          <strong> bs_analysis_id</strong>{\" \"}\n                        </th>\n                        <th>\n                          {\" \"}\n                          <strong> bs_analysis_status</strong>{\" \"}\n                        </th>\n                        <th>\n                          {\" \"}\n                          <strong> bs_analysis_name</strong>{\" \"}\n                        </th>\n                        <th colSpan='2'>\n                          {\" \"}\n                          <strong> Actions</strong>{\" \"}\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>{rows}</tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AnalysisList;\n","/home/aravind/Desktop/newpro/kyvor-gene/front/src/basespace/analysis/AnalysisAdd.js",["299","300"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Form } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { addAnalysis } from \"../../actions/basespace\";\nimport { toast } from \"react-toastify\";\n\n\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntoast.configure();\nfunction validate(analysis_type) {\n  const errors = [];\n\n  if (analysis_type === \"\") {\n    errors.push(\"please enter your Analysis_type\");\n  }\n  return errors;\n}\nexport class AnalysisAdd extends Component {\n  state = {\n    analysis_type: \"\",\n    analysis_ref_id: \"\",\n    analysis_status: \"\",\n    analysis_description: \"\",\n    analysis_timestamp: \"\",\n    bs_analysis_id: \"\",\n    bs_analysis_status: \"\",\n    bs_analysis_name: \"\",\n  };\n  static propTypes = {\n    addAnalysis: PropTypes.func.isRequired,\n  };\n\n  // Input Change Handler\n  changeHandler(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const {\n      analysis_type,\n      analysis_ref_id,\n      analysis_status,\n      analysis_description,\n      analysis_timestamp,\n      bs_analysis_id,\n      bs_analysis_status,\n      bs_analysis_name,\n    } = this.state;\n\n    const analysis = {\n      analysis_type,\n      analysis_ref_id,\n      analysis_status,\n      analysis_description,\n      analysis_timestamp,\n      bs_analysis_id,\n      bs_analysis_status,\n      bs_analysis_name,\n    };\n    const errors = validate(analysis_type);\n    if (errors.length > 0) {\n      this.setState({ errors });\n      return;\n    }else if(errors.length === 0){\n      toast.success('Analysis was added successfully')\n    }\n\n    this.props.addAnalysis(analysis, errors);\n    this.setState({\n      analysis_type: \"\",\n      analysis_ref_id: \"\",\n      analysis_status: \"\",\n      analysis_description: \"\",\n      analysis_timestamp: \"\",\n      bs_analysis_id: \"\",\n      bs_analysis_status: \"\",\n      bs_analysis_name: \"\",\n    });\n    this.props.history.push(\"/basespace/analysis\");\n  };\n\n  render() {\n    const {\n      errors,\n      analysis_type,\n      analysis_ref_id,\n      analysis_status,\n      analysis_description,\n      analysis_timestamp,\n      bs_analysis_id,\n      bs_analysis_status,\n      bs_analysis_name,\n    } = this.state;\n    return (\n      <div>\n        <div className=\"page-header\">\n          <h3 className=\"page-projectName\"> Adding Analysis Form </h3>\n          <nav aria-label=\"breadcrumb\">\n            <ol className=\"breadcrumb\">\n              <li className=\"breadcrumb-item\">\n                <a href=\"!#\" onClick={(event) => event.preventDefault()}></a>\n              </li>\n            </ol>\n          </nav>\n        </div>\n\n        <div className=\" col-11 grid-margin stretch-card-1 \">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <form className=\"forms-sample\" onSubmit={this.onSubmit}>\n              {errors &&\n                    errors.map((error) => (\n                      <div class=\"alert alert-danger alert-dismissible\"  role=\"alert\" key={error}>\n                        \n                        <strong>Error: {error}</strong>\n                      </div>\n                    ))}\n                <Form.Group>\n                  <label htmlFor=\"exampleInputUsername1\">Analysis Type</label>\n                  <Form.Control\n                    type=\"text\"\n                    id=\"exampleInputUsername1\"\n                    placeholder=\"Analysis Type\"\n                    size=\"lg\"\n                    value={analysis_type}\n                    name=\"analysis_type\"\n                    onChange={this.onChange}\n                  \n                  />\n                </Form.Group>\n                <Form.Group>\n                  <label htmlFor=\"exampleInputUsername1\">Analysis Ref Id</label>\n                  <Form.Control\n                    type=\"text\"\n                    id=\"exampleInputUsername1\"\n                    placeholder=\"Analysis ref id\"\n                    size=\"lg\"\n                    value={analysis_ref_id}\n                    name=\"analysis_ref_id\"\n                    onChange={this.onChange}\n                    required\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <label id=\"inputGroupFile01\">Analysis Status</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"inputGroupFile01\"\n                    placeholder='Analysis Status'\n                    value={analysis_status}\n                    name=\"analysis_status\"\n                    onChange={this.onChange}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <label id=\"inputGroupFile02\">Analysis Description</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"inputGroupFile02\"\n                    placeholder='Analysis Description'\n                    value={analysis_description}\n                    name=\"analysis_description\"\n                    onChange={this.onChange}\n                    required\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <label id=\"inputGroupFile03\">Analysis Timestamp</label>\n                  <input\n                    type=\"date\"\n                    className=\"form-control\"\n                    id=\"inputGroupFile03\"\n                    placeholder='Analysis Timestamp'\n                    value={analysis_timestamp}\n                    name=\"analysis_timestamp\"\n                    onChange={this.onChange}\n                    required\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <label id=\"inputGroupFile04\">Bs Analysis Id</label>\n                  <input\n                    type=\"text\"\n                    placeholder='Bs Analysis Id'\n                    className=\"form-control\"\n                    id=\"inputGroupFile04\"\n                    value={bs_analysis_id}\n                    name=\"bs_analysis_id\"\n                    onChange={this.onChange}\n                    required\n                  />\n                </Form.Group>\n\n                <Form.Group>\n                  <label id=\"inputGroupFile04\">Bs Analysis Status</label>\n                  <input\n                    type=\"text\"\n                    placeholder='Bs Analysis Status'\n                    className=\"form-control\"\n                    id=\"inputGroupFile04\"\n                    value={bs_analysis_status}\n                    name=\"bs_analysis_status\"\n                    onChange={this.onChange}\n                    required\n                  />\n                </Form.Group>\n\n                <Form.Group>\n                  <label id=\"inputGroupFile04\">Bs Analysis Name</label>\n                  <input\n                    type=\"text\"\n                    placeholder='Bs Analysis Name'\n                    className=\"form-control\"\n                    id=\"inputGroupFile04\"\n                    value={bs_analysis_name}\n                    name=\"bs_analysis_name\"\n                    onChange={this.onChange}\n                    required\n                  />\n                </Form.Group>\n\n                <div className=\"col text-center\">\n                  <button\n                    type=\"submit\"\n                    className=\"btn  mr-2 btn-sm\"\n                    style={{ backgroundColor: \"#fec107\" }}\n                  >\n                    Submit\n                  </button>\n                </div>\n              </form>\n              <div className=\"border border-light p-3 mb-4\">\n                <div className=\"text-center\">\n                  <span>\n                    <Link to=\"/basic-ui/Basespace\">\n                      <button className=\"btn btn-light btn-sm\"> Cancel</button>\n                    </Link>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { addAnalysis })(AnalysisAdd);\n","/home/aravind/Desktop/newpro/kyvor-gene/front/src/basespace/analysis/UpdateAnalysis.js",["301","302","303"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { baseURL ,headers} from \"../Headerssample\";\n\nconst UpdateAnalysis = () => {\n  const initialMenuState = {\n    id: null,\n    analysis_type: \"\",\n    analysis_ref_id: \"\",\n    analysis_status: \"\",\n    analysis_description: \"\",\n    analysis_timestamp: \"\",\n    bs_analysis_id: \"\",\n    bs_analysis_status: \"\",\n    bs_analysis_name: \"\",\n  };\n\n  let { id } = useParams();\n\n  const [currentMenu, setCurrentMenu] = useState(initialMenuState);\n  const [submitted, setSubmitted] = useState(false);\n\n  useEffect(() => {\n    retrieveMenu();\n  }, []);\n\n  const handleMenuChange = (e) => {\n    const { name, value } = e.target;\n    setCurrentMenu({ ...currentMenu, [name]: value });\n  };\n\n  const retrieveMenu = () => {\n    axios\n      .get(`${baseURL}/analysis/${id}/`, {\n        headers: {\n          headers,\n        },\n      })\n      .then((response) => {\n        setCurrentMenu({\n          id: response.data.id,\n\n          analysis_type:  response.data.analysis_type,\n    analysis_ref_id:  response.data.analysis_ref_id,\n    analysis_status: response.data.analysis_status ,\n    analysis_description: response.data.analysis_description ,\n    analysis_timestamp:  response.data.analysis_timestamp,\n    bs_analysis_id: response.data.bs_analysis_id ,\n    bs_analysis_status: response.data.bs_analysis_status ,\n    bs_analysis_name: response.data.bs_analysis_name,\n        \n        });\n        console.log(currentMenu);\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n  };\n\n  const updateMenu = () => {\n    let data = {\n      analysis_type:  currentMenu.analysis_type,\n      analysis_ref_id: currentMenu.analysis_ref_id,\n      analysis_status: currentMenu.analysis_status ,\n      analysis_description: currentMenu.analysis_description ,\n      analysis_timestamp: currentMenu.analysis_timestamp,\n      bs_analysis_id: currentMenu.bs_analysis_id ,\n      bs_analysis_status: currentMenu.bs_analysis_status ,\n      bs_analysis_name: currentMenu.bs_analysis_name,\n    };\n\n    axios\n      .put(`${baseURL}/analysis/${id}/`, data, {\n        headers: {\n          headers,\n        },\n      })\n      .then((response) => {\n        setCurrentMenu({\n          id: response.data.id,\n          analysis_type:  response.data.analysis_type,\n          analysis_ref_id:  response.data.analysis_ref_id,\n          analysis_status: response.data.analysis_status ,\n          analysis_description: response.data.analysis_description ,\n          analysis_timestamp:  response.data.analysis_timestamp,\n          bs_analysis_id: response.data.bs_analysis_id ,\n          bs_analysis_status: response.data.bs_analysis_status ,\n          bs_analysis_name: response.data.bs_analysis_name,\n         \n        });\n        setSubmitted(true);\n        console.log(response.data);\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n  };\n\n  const newMenu = () => {\n    setCurrentMenu(initialMenuState);\n    setSubmitted(false);\n  };\n\n  return (\n    <div>\n    <div className=\"page-header\">\n      <h3 className=\"page-projectName\"> Updating Biosample Form </h3>\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <a href=\"!#\" onClick={(event) => event.preventDefault()}></a>\n          </li>\n        </ol>\n      </nav>\n    </div>\n    <div className=\" col-11 grid-margin stretch-card-1 \">\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <div className=\"submit-form\">\n            {submitted ? (\n              <div>\n                <div\n                  className=\"alert alert-success alert-dismissible fade show\"\n                  role=\"alert\"\n                >\n                  Biosamples Updated!\n                </div>\n                <Link to='/basespace/analysis'><button className=\"btn\" style={{backgroundColor:\"#fec107\"}}>\n                  Back\n                </button></Link>\n              </div>\n            ) : (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Analysis Type</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"name\"\n                    required\n                    value={currentMenu.analysis_type}\n                    onChange={handleMenuChange}\n                    name=\"analysis_type\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Analysis Ref Id</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"name\"\n                    required\n                    value={currentMenu.analysis_ref_id}\n                    onChange={handleMenuChange}\n                    name=\"analysis_ref_id\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Analysis Status</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"name\"\n                    required\n                    value={currentMenu.analysis_status}\n                    onChange={handleMenuChange}\n                    name=\"analysis_status\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Analysis Description</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"name\"\n                    required\n                    value={currentMenu.analysis_description}\n                    onChange={handleMenuChange}\n                    name=\"analysis_description\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Analysis Timestamp</label>\n                  <input\n                    type=\"date\"\n                    className=\"form-control\"\n                    id=\"name\"\n                    required\n                    value={currentMenu.analysis_timestamp}\n                    onChange={handleMenuChange}\n                    name=\"analysis_timestamp\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Bs Analysis Id</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"name\"\n                    required\n                    value={currentMenu.bs_analysis_id}\n                    onChange={handleMenuChange}\n                    name=\"bs_analysis_id\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Bs Analysis Status</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"name\"\n                    required\n                    value={currentMenu.bs_analysis_status}\n                    onChange={handleMenuChange}\n                    name=\"bs_analysis_status\"\n                  />\n                </div>\n\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Bs Analysis Name</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"name\"\n                    required\n                    value={currentMenu.bs_analysis_name}\n                    onChange={handleMenuChange}\n                    name=\"bs_analysis_name\"\n                  />\n                </div>\n                <div className=\"col text-center\">\n                <button onClick={updateMenu} className=\"btn\" style={{backgroundColor:'#fec107'}}> \n                  Update\n                </button>\n                <Link to='/basespace/analysis'><button className=\"btn\" style={{backgroundColor:\"#fec107\"}}>\n                  Back\n                </button></Link>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  );\n};\n\nexport default UpdateAnalysis;\n","/home/aravind/Desktop/newpro/kyvor-gene/front/src/basespace/Headerssample.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/basespace/projects/ProjectId.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/history.js",[],"/home/aravind/Desktop/newpro/kyvor-gene/front/src/basespace/Modal.js",[],{"ruleId":"304","replacedBy":"305"},{"ruleId":"306","replacedBy":"307"},{"ruleId":"308","severity":1,"message":"309","line":15,"column":6,"nodeType":"310","endLine":15,"endColumn":8,"suggestions":"311"},{"ruleId":"312","severity":1,"message":"313","line":14,"column":7,"nodeType":"314","messageId":"315","endLine":14,"endColumn":15},{"ruleId":"312","severity":1,"message":"316","line":3,"column":10,"nodeType":"314","messageId":"315","endLine":3,"endColumn":18},{"ruleId":"317","severity":1,"message":"318","line":9,"column":13,"nodeType":"319","endLine":9,"endColumn":80},{"ruleId":"312","severity":1,"message":"320","line":2,"column":10,"nodeType":"314","messageId":"315","endLine":2,"endColumn":14},{"ruleId":"308","severity":1,"message":"321","line":21,"column":6,"nodeType":"310","endLine":21,"endColumn":16,"suggestions":"322"},{"ruleId":"312","severity":1,"message":"323","line":6,"column":10,"nodeType":"314","messageId":"315","endLine":6,"endColumn":14},{"ruleId":"312","severity":1,"message":"324","line":17,"column":9,"nodeType":"314","messageId":"315","endLine":17,"endColumn":17},{"ruleId":"312","severity":1,"message":"325","line":20,"column":9,"nodeType":"314","messageId":"315","endLine":20,"endColumn":17},{"ruleId":"326","severity":1,"message":"327","line":29,"column":1,"nodeType":"328","endLine":95,"endColumn":2},{"ruleId":"329","severity":1,"message":"330","line":71,"column":9,"nodeType":"331","messageId":"332","endLine":71,"endColumn":25},{"ruleId":"312","severity":1,"message":"333","line":1,"column":17,"nodeType":"314","messageId":"315","endLine":1,"endColumn":26},{"ruleId":"312","severity":1,"message":"334","line":7,"column":10,"nodeType":"314","messageId":"315","endLine":7,"endColumn":13},{"ruleId":"312","severity":1,"message":"335","line":4,"column":16,"nodeType":"314","messageId":"315","endLine":4,"endColumn":26},{"ruleId":"336","severity":1,"message":"337","line":102,"column":19,"nodeType":"319","endLine":102,"endColumn":76},{"ruleId":"308","severity":1,"message":"338","line":24,"column":6,"nodeType":"310","endLine":24,"endColumn":8,"suggestions":"339"},{"ruleId":"312","severity":1,"message":"340","line":89,"column":9,"nodeType":"314","messageId":"315","endLine":89,"endColumn":16},{"ruleId":"336","severity":1,"message":"337","line":102,"column":17,"nodeType":"319","endLine":102,"endColumn":74},{"ruleId":"312","severity":1,"message":"341","line":4,"column":10,"nodeType":"314","messageId":"315","endLine":4,"endColumn":14},{"ruleId":"326","severity":1,"message":"327","line":8,"column":1,"nodeType":"328","endLine":24,"endColumn":2},{"ruleId":"326","severity":1,"message":"327","line":7,"column":1,"nodeType":"328","endLine":15,"endColumn":2},{"ruleId":"312","severity":1,"message":"342","line":3,"column":8,"nodeType":"314","messageId":"315","endLine":3,"endColumn":13},{"ruleId":"312","severity":1,"message":"342","line":3,"column":8,"nodeType":"314","messageId":"315","endLine":3,"endColumn":13},{"ruleId":"312","severity":1,"message":"343","line":7,"column":10,"nodeType":"314","messageId":"315","endLine":7,"endColumn":24},{"ruleId":"308","severity":1,"message":"338","line":32,"column":6,"nodeType":"310","endLine":32,"endColumn":8,"suggestions":"344"},{"ruleId":"312","severity":1,"message":"340","line":100,"column":9,"nodeType":"314","messageId":"315","endLine":100,"endColumn":16},{"ruleId":"336","severity":1,"message":"337","line":114,"column":15,"nodeType":"319","endLine":114,"endColumn":72},{"ruleId":"312","severity":1,"message":"335","line":5,"column":16,"nodeType":"314","messageId":"315","endLine":5,"endColumn":26},{"ruleId":"312","severity":1,"message":"345","line":8,"column":8,"nodeType":"314","messageId":"315","endLine":8,"endColumn":13},{"ruleId":"336","severity":1,"message":"337","line":106,"column":17,"nodeType":"319","endLine":106,"endColumn":74},{"ruleId":"326","severity":1,"message":"327","line":12,"column":4,"nodeType":"328","endLine":26,"endColumn":5},{"ruleId":"312","severity":1,"message":"343","line":7,"column":10,"nodeType":"314","messageId":"315","endLine":7,"endColumn":24},{"ruleId":"312","severity":1,"message":"335","line":5,"column":16,"nodeType":"314","messageId":"315","endLine":5,"endColumn":26},{"ruleId":"336","severity":1,"message":"337","line":109,"column":17,"nodeType":"319","endLine":109,"endColumn":74},{"ruleId":"308","severity":1,"message":"338","line":26,"column":6,"nodeType":"310","endLine":26,"endColumn":8,"suggestions":"346"},{"ruleId":"312","severity":1,"message":"340","line":100,"column":9,"nodeType":"314","messageId":"315","endLine":100,"endColumn":16},{"ruleId":"336","severity":1,"message":"337","line":112,"column":13,"nodeType":"319","endLine":112,"endColumn":70},"no-native-reassign",["347"],"no-negated-in-lhs",["348"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkAuthenticated' and 'load_user'. Either include them or remove the dependency array. If 'checkAuthenticated' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["349"],"no-unused-vars","'ListItem' is assigned a value but never used.","Identifier","unusedVar","'Collapse' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'googleAuthenticate'. Either include it or remove the dependency array. If 'googleAuthenticate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["350"],"'Form' is defined but never used.","'onChange' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'Component' is defined but never used.","'css' is defined but never used.","'useHistory' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","React Hook useEffect has a missing dependency: 'retrieveMenu'. Either include it or remove the dependency array.",["351"],"'newMenu' is assigned a value but never used.","'Card' is defined but never used.","'Table' is defined but never used.","'ToastContainer' is defined but never used.",["352"],"'Multi' is defined but never used.",["353"],"no-global-assign","no-unsafe-negation",{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"358","fix":"360"},{"desc":"358","fix":"361"},"Update the dependencies array to be: [checkAuthenticated, load_user]",{"range":"362","text":"363"},"Update the dependencies array to be: [googleAuthenticate, location]",{"range":"364","text":"365"},"Update the dependencies array to be: [retrieveMenu]",{"range":"366","text":"367"},{"range":"368","text":"367"},{"range":"369","text":"367"},[549,551],"[checkAuthenticated, load_user]",[665,675],"[googleAuthenticate, location]",[603,605],"[retrieveMenu]",[682,684],[669,671]]