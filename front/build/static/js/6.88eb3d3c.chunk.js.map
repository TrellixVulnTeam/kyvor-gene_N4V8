{"version":3,"sources":["app/user-pages/Time.js","app/user-pages/Login.js"],"names":["Clock","props","state","date","Date","this","timerID","setInterval","tick","clearInterval","setState","toLocaleTimeString","React","Component","connect","isAuthenticated","auth","login","useState","email","password","formData","continueWithGoogle","a","axios","get","process","res","window","location","replace","data","authorization_url","to","pathname","className","src","alt","Time","type","style","backgroundColor","onClick"],"mappings":"0QA6BeA,E,kDA1Bb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAAM,IAAIC,MAHK,E,qDAOnB,WAAqB,IAAD,OAClBC,KAAKC,QAAUC,aAAY,kBAAM,EAAKC,SAAQ,O,kCAGhD,WACEC,cAAcJ,KAAKC,W,kBAGrB,WACED,KAAKK,SAAS,CACZP,KAAM,IAAIC,S,oBAId,WACE,OAAOC,KAAKH,MAAMC,KAAKQ,mBAAmB,a,GAvB1BC,IAAMC,W,gBCmIXC,uBAJS,SAACZ,GAAD,MAAY,CAClCa,gBAAiBb,EAAMc,KAAKD,mBAGU,CAAEE,WAA3BH,EA7HD,SAAC,GAA+B,EAA7BG,MAA8B,IAAvBF,EAAsB,EAAtBA,gBACtB,EAAgCG,mBAAS,CACvCC,MAAO,GACPC,SAAU,KAFZ,mBAAOC,EAAP,KAgBMC,GAhBN,KAK4BD,EAApBF,MAAoBE,EAAbD,SAWS,uCAAG,4BAAAG,EAAA,+EAELC,IAAMC,IAAN,UACbC,wBADa,+CACuDA,wBADvD,YAFK,OAEjBC,EAFiB,OAMvBC,OAAOC,SAASC,QAAQH,EAAII,KAAKC,mBANV,uGAAH,sDAUxB,OAAIjB,EAEM,cAAC,IAAD,CAAUkB,GAAI,CACpBC,SAAU,OAMZ,8BACE,8BACA,qBAAKC,UAAU,sCAAf,SAEE,qBAAKA,UAAU,iBAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,sBAAKA,UAAU,gDAAf,UAEE,sBAAKA,UAAU,aAAf,UACE,qBACEC,IAAI,oKACJC,IAAI,SAEN,8BACE,+BACE,cAACC,EAAD,WAIN,0DACA,oBAAIH,UAAU,oBAAd,kCACA,uBAyCA,qBAAKA,UAAU,OAAf,SACE,yBACEI,KAAK,SACLJ,UAAU,uDACVK,MAAO,CAACC,gBAAgB,WACxBC,QAASpB,EAJX,UAME,mBAAGa,UAAU,sBAAwBK,MAAO,CAACC,gBAAgB,aAN/D","file":"static/js/6.88eb3d3c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date(),\n    });\n  }\n\n  render() {\n    return this.state.date.toLocaleTimeString(\"en-US\");\n  }\n}\n\nexport default Clock;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../actions/auth\";\nimport axios from \"axios\";\nimport { Form } from \"react-bootstrap\";\nimport Time from \"./Time\";\nimport \"../../profile.css\";\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const { email, password } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    login(email, password);\n  };\n\n  const continueWithGoogle = async () => {\n    try {\n      const res = await axios.get(\n        `${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?redirect_uri=${process.env.REACT_APP_API_URL}/google`\n      );\n\n      window.location.replace(res.data.authorization_url);\n    } catch (err) {}\n  };\n\n  if (isAuthenticated) {\n    \n    return (<Redirect to={{\n      pathname: \"/\"\n     \n  }} />);\n  }\n\n  return (\n    <div>\n      <div>\n      <div className=\"d-flex align-items-center auth px-0\">\n        \n        <div className=\"row w-100 mx-0\">\n          <div className=\"col-lg-6 mx-auto\">\n            <div className=\"auth-form-light text-center py-5 px-4 px-sm-5\"> \n            \n              <div className=\"brand-logo\">\n                <img\n                  src=\"https://media-exp1.licdn.com/dms/image/C510BAQFzmTl0wDAz9A/company-logo_200_200/0/1571652632244?e=2159024400&v=beta&t=eaKo0GEOitZiwddxEj0nHviaJUkB3IuudN4hfCTp4fE\"\n                  alt=\"logo\"\n                />\n                <div>\n                  <span>\n                    <Time />\n                  </span>\n                </div>\n              </div>\n              <h4>Hello, welcome to Kyvor </h4>\n              <h6 className=\"font-weight-light\">Sign in to continue.</h6>\n              <br/>\n              {/* <Form onSubmit={(e) => onSubmit(e)}>\n                <Form.Group className=\"d-flex search-field\">\n                  <Form.Control\n                    type=\"email\"\n                    placeholder=\"Email...\"\n                    size=\"lg\"\n                    className=\"h-auto\"\n                    name=\"email\"\n                    value={email}\n                    onChange={(e) => onChange(e)}\n                    required\n                  />\n                </Form.Group>\n                <Form.Group className=\"d-flex search-field\">\n                  <Form.Control\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    size=\"lg\"\n                    className=\"h-auto\"\n                    name=\"password\"\n                    value={password}\n                    onChange={(e) => onChange(e)}\n                    minLength=\"6\"\n                    required\n                  />\n                </Form.Group>\n                <div className=\"mt-3\">\n                  <button\n                    className=\"btn btn-block btn-primary btn-sm font-weight-medium auth-form-btn\"\n                    type=\"submit\"\n                  >\n                    SIGN IN\n                  </button>\n                </div>\n              </Form>\n              <div className=\"or-container\">\n                <div className=\"line-separator\"></div>\n                <div className=\"or-label\">or</div>\n                <div className=\"line-separator\"></div>\n              </div> */}\n              <div className=\"mb-2\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-lg btn-social-icon-text btn-google btn-block\"\n                  style={{backgroundColor:'#fec107'}}\n                  onClick={continueWithGoogle}\n                >\n                  <i className=\"mdi mdi-google-plus\"   style={{backgroundColor:'#fec107'}} ></i>Google\n                </button>\n                {/* <button type=\"button\" className=\"btn btn-lg btn-google btn-block text-uppercase btn-outline\" onClick={continueWithGoogle}>\n                     <img src=\"https://img.icons8.com/color/16/000000/google-logo.png\"/> Signup Using Google\n                    </button> */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      </div>\n    \n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n"],"sourceRoot":""}